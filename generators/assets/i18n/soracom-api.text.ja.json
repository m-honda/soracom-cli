{
  "auth": {
    "auth": {
      "post": {
        "summary": "API アクセスの認証を行い、API キーと API トークンを発行します。",
        "description": "API アクセスの認証を行います。ルートアカウントで認証する場合は email と password、認証キーでの認証の場合は authKeyId と authKey、SAM ユーザー認証の場合はoperatorId, userName, password をリクエストに含めてください。認証が成功した場合、API キーと API トークンが返されるので、以降の認証が必要なリクエスト時にはこの API キーと API トークンをヘッダーに付与してリクエストを行ってください。",
        "parameters": {
          "auth": {
            "description": "認証リクエスト"
          }
        },
        "responses": {
          "status200": {
            "description": "認証成功"
          },
          "status401": {
            "description": "認証失敗"
          }
        },
        "cli": {
          "summary": "API アクセスの認証を行い、API キーと API トークンを発行します。",
          "description": "API アクセスの認証を行います。\nルートアカウントで認証する場合は --email と --password を指定してください。\n認証キーを用いて認証する場合は --auth-key-id と --auth-key を指定してください。\nSAM ユーザーで認証する場合は --operator-id, --user-name, --password をリクエストに含めてください。認証が成功すると、API キーや API トークンの情報が表示されます。"
        }
      }
    },
    "issue_password_reset_token": {
      "post": {
        "summary": "パスワードリセット用のトークンを発行します。",
        "description": "パスワードをリセットするためのワンタイムトークンを生成して、オペレーターのメールアドレスに送付します。メールに記載されているトークンを取得し、/v1/auth/password_reset_token/verify API を呼び出して新しいパスワードを設定します。",
        "responses": {
          "status200": {
            "description": "OK."
          },
          "status400": {
            "description": "メールアドレスが正しくありません。"
          }
        },
        "cli": {
          "summary": "パスワードリセット用のトークンを発行します。",
          "description": "パスワードをリセットするためのワンタイムトークンを生成して、オペレーターのメールアドレスに送付します。メールに記載されているトークンを取得し、soracom auth verify-password-reset-token コマンドで新しいパスワードを設定してください。"
        }
      }
    },
    "verify_password_reset_token": {
      "post": {
        "summary": "パスワードリセット用のトークンを検証し、パスワードを更新します。",
        "description": "パスワードリセット用のトークンを検証し、検証に成功した場合オペレーターのパスワードを更新します。",
        "responses": {
          "status200": {
            "description": "OK."
          },
          "status400": {
            "description": "不正なトークンが指定されました。"
          },
          "status404": {
            "description": "トークンの有効期限が切れています。"
          }
        },
        "cli": {
          "summary": "パスワードリセット用のトークンを検証し、パスワードを更新します。",
          "description": "パスワードリセット用のトークンを検証し、検証に成功した場合オペレーターのパスワードを更新します。"
        }
      }
    }
  },
  "credentials": {
    "list_credentials": {
      "get": {
        "summary": "認証情報の表示",
        "description": "認証情報の一覧を返す。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "create_credential": {
      "post": {
        "summary": "認証情報の作成",
        "description": "認証情報を新規作成する。",
        "responses": {
          "status201": {
            "description": "Created"
          }
        }
      }
    },
    "update_credential": {
      "put": {
        "summary": "認証情報の更新",
        "description": "認証情報を更新する。",
        "responses": {
          "status200": {
            "description": "OK."
          },
          "status400": {
            "description": "リクエストに誤りがあるか、指定されたトークンがすでに無効になっている（後者の場合、/auth API で再度認証を行う必要がある）"
          }
        }
      }
    },
    "delete_credential": {
      "delete": {
        "summary": "認証情報の削除",
        "description": "認証情報を削除する。"
      }
    },
    "cli": {
      "summary": "認証情報に関する操作を行います。",
      "description": "認証情報に関する操作を行います。"
    }
  },
  "operator": {
    "create_operator": {
      "post": {
        "summary": "Create Operator",
        "description": "Operator の新規登録をリクエストする。パラメーターで指定されたメールアドレスに宛てて、Operator 登録確認用のワンタイムトークンを含んだメールが送信される。",
        "responses": {
          "status200": {
            "description": "Operator が作成された"
          },
          "status400": {
            "description": "メールアドレスがすでに登録されているか、パスワードのフォーマットが不正"
          }
        }
      }
    },
    "issue_email_change_token": {
      "post": {
        "summary": "Issue Email Change Token",
        "description": "メールアドレス変更用のワンタイムトークンをメールで送付する。"
      }
    },
    "verify_email_change_token": {
      "post": {
        "summary": "Verify Email Change Token",
        "description": "メールアドレス変更用のトークンを確認して、メールアドレスを変更する。"
      }
    },
    "verify_operator": {
      "post": {
        "summary": "Verify Operator",
        "description": "Operator 登録の確認を行う。メールで送られてくる確認用ワンタイムトークンをパラメーターに含めて呼び出しを行う。",
        "responses": {
          "status200": {
            "description": "登録成功"
          },
          "status400": {
            "description": "ワンタイムトークンが不正"
          },
          "status404": {
            "description": "ワンタイムトークンが期限切れ"
          }
        }
      }
    },
    "get_operator": {
      "get": {
        "summary": "Get Operator",
        "description": "Operatorの情報を返す。",
        "responses": {
          "status200": {
            "description": "OK."
          },
          "status400": {
            "description": "Invalid Operator Id"
          }
        }
      }
    },
    "list_operator_auth_keys": {
      "get": {
        "summary": "List Operator AuthKeys",
        "description": "OperatorのAuthKey一覧を返す。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "generate_operator_auth_key": {
      "post": {
        "summary": "Generate Operator AuthKey",
        "description": "OperatorのAuthKeyを生成する。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "delete_operator_auth_key": {
      "delete": {
        "summary": "Delete Operator AuthKey",
        "description": "OperatorのAuthKeyを削除する。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "update_operator_password": {
      "post": {
        "summary": "Update Operator Password",
        "description": "Operator のパスワードを更新する。",
        "responses": {
          "status200": {
            "description": "OK."
          },
          "status400": {
            "description": "Invalid password."
          }
        }
      }
    },
    "generate_support_token": {
      "post": {
        "summary": "Generate Token for Support Console",
        "description": "サポート画面アクセス用のトークンを返す。",
        "responses": {
          "status200": {
            "description": "OK."
          },
          "status400": {
            "description": "Invalid Operator Id"
          },
          "status403": {
            "description": "Invalid token."
          }
        }
      }
    },
    "generate_auth_token": {
      "post": {
        "summary": "Generate Authentication Token",
        "description": "新しい API トークンを発行する。現在の API トークンをヘッダーに入れてリクエストを行うと、新しい API トークンを含んだレスポンスを返す。以降のリクエスト時にはこの新しい API トークンを用いることができる。",
        "responses": {
          "status200": {
            "description": "OK."
          },
          "status400": {
            "description": "リクエストに誤りがあるか、指定されたトークンがすでに無効になっている（後者の場合、/auth API で再度認証を行う必要がある）"
          }
        }
      }
    },
    "cli": {
      "summary": "オペレーターに関する操作を行います。",
      "description": "オペレーターに関する操作を行います。"
    },
    "auth_keys": {
      "cli": {
        "summary": "オペレーターの認証キーに関する操作を行います。",
        "description": "オペレーターの認証キーに関する操作を行います。"
      }
    }
  },
  "roles": {
    "list_roles": {
      "get": {
        "summary": "List Roles",
        "description": "Roleの一覧を返す。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "get_role": {
      "get": {
        "summary": "Get Role",
        "description": "Roleを取得する。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "create_role": {
      "post": {
        "summary": "Create Role",
        "description": "Roleを新しく追加する。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "update_role": {
      "put": {
        "summary": "Update Role",
        "description": "Roleを編集する。"
      }
    },
    "delete_role": {
      "delete": {
        "summary": "Delete Role",
        "description": "Roleを削除する。"
      }
    },
    "list_role_attached_users": {
      "get": {
        "summary": "List Role Attached Users",
        "description": "Roleに紐づくユーザーの一覧を取得する。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "list_user_roles": {
      "get": {
        "summary": "List User Roles",
        "description": "ユーザーのロールの一覧を取得する。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "attach_role": {
      "post": {
        "summary": "Attach Role to User",
        "description": "ユーザーにロールをアタッチする。"
      }
    },
    "detach_role": {
      "delete": {
        "summary": "Detach Role from User",
        "description": "ユーザーからロールをデタッチする。"
      }
    },
    "cli": {
      "summary": "ロールに関する操作を行います。",
      "description": "ロールに関する操作を行います。"
    }
  },
  "shipping_addresses": {
    "list_shipping_addresses": {
      "get": {
        "summary": "List shipping addresses",
        "description": "商品発送先の一覧を返します。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "create_shipping_address": {
      "post": {
        "summary": "Create shipping address",
        "description": "商品発送先を新規登録する。",
        "responses": {
          "status200": {
            "description": "OK."
          },
          "status201": {
            "description": "shippingAddreddId"
          }
        }
      }
    },
    "get_shipping_address": {
      "get": {
        "summary": "Get shipping address",
        "description": "商品発送先を返す。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "update_shipping_address": {
      "put": {
        "summary": "Update shipping address",
        "description": "商品発送先を更新する。"
      }
    },
    "delete_shipping_address": {
      "delete": {
        "summary": "Delete shipping address",
        "description": "商品発送先を削除する。"
      }
    },
    "cli": {
      "summary": "出荷先情報に関する操作を行います。",
      "description": "出荷先情報に関する操作を行います。"
    }
  },
  "users": {
    "list_users": {
      "get": {
        "summary": "List Users",
        "description": "SAMユーザー一覧を返す。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "get_user": {
      "get": {
        "summary": "Get User",
        "description": "SAMユーザーを返す。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "create_user": {
      "post": {
        "summary": "Create User",
        "description": "SAMユーザーを新しく追加する。"
      }
    },
    "update_user": {
      "put": {
        "summary": "Update User",
        "description": "SAMユーザーを更新する。",
        "responses": {
          "status404": {
            "description": "SAM User not found."
          }
        }
      }
    },
    "delete_user": {
      "delete": {
        "summary": "Delete User",
        "description": "SAMユーザーを削除する。",
        "responses": {
          "status404": {
            "description": "SAM User not found."
          }
        }
      }
    },
    "list_user_auth_keys": {
      "get": {
        "summary": "List User AuthKeys",
        "description": "SAMユーザーのAuthKey一覧を返す。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "generate_user_auth_key": {
      "post": {
        "summary": "Generate AuthKey",
        "description": "SAMユーザーのAuthKeyを生成する。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "get_user_auth_key": {
      "get": {
        "summary": "Get AuthKey",
        "description": "SAMユーザーのAuthKeyを返す。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "delete_user_auth_key": {
      "delete": {
        "summary": "Delete User AuthKey",
        "description": "SAMユーザーのAuthKeyを削除する。",
        "responses": {
          "status404": {
            "description": "AuthKey not found."
          }
        }
      }
    },
    "has_user_password": {
      "get": {
        "summary": "Has User Password",
        "description": "SAMユーザーのパスワードがセットされているかを取得する。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "create_user_password": {
      "post": {
        "summary": "Create Password",
        "description": "SAMユーザーのパスワードを作成する。"
      }
    },
    "update_user_password": {
      "put": {
        "summary": "Update Password",
        "description": "SAMユーザーのパスワードを更新する。"
      }
    },
    "delete_user_password": {
      "delete": {
        "summary": "Delete Password",
        "description": "ユーザーのパスワードを削除する。",
        "responses": {
          "status404": {
            "description": "Password registration is required."
          }
        }
      }
    },
    "get_user_permission": {
      "get": {
        "summary": "Get User Permission",
        "description": "SAMユーザーの権限設定を取得する。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "update_user_permission": {
      "put": {
        "summary": "Update Permission to User",
        "description": "SAMユーザーの権限を更新する。"
      }
    },
    "cli": {
      "summary": "SAM ユーザーに関する操作を行います。",
      "description": "SAM ユーザーに関する操作を行います。"
    },
    "auth_keys": {
      "cli": {
        "summary": "SAM ユーザーの認証キーに関する操作を行います。",
        "description": "SAM ユーザーの認証キーに関する操作を行います。"
      }
    },
    "password": {
      "cli": {
        "summary": "SAM ユーザーのパスワードに関する操作を行います。",
        "description": "SAM ユーザーのパスワードに関する操作を行います。"
      }
    },
    "permissions": {
      "cli": {
        "summary": "SAM ユーザーのパーミッションに関する操作を行います。",
        "description": "SAM ユーザーのパーミッションに関する操作を行います。"
      }
    }
  },
  "subscribers": {
    "list_subscribers": {
      "get": {
        "summary": "List Subscribers",
        "description": "条件にマッチするSubscriberのリストを返す。Subscriberの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。",
        "parameters": {
          "tag_name": {
            "description": "検索対象にするタグの名前(完全一致)。"
          },
          "tag_value": {
            "description": "検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。"
          },
          "tag_value_match_mode": {
            "description": "タグの検索条件。"
          },
          "status_filter": {
            "description": "検索対象にするstatus。`|`で区切って複数指定することができる。指定可能な値の一覧は以下のとおり: `active`, `inactive`, `ready`, `instock`, `shipped`, `suspended`, `terminated`"
          },
          "speed_class_filter": {
            "description": "検索対象にする速度クラス。`|`で区切って複数指定することができる。指定可能な値の一覧は以下のとおり: `s1.minimum`, `s1.slow`, `s1.standard`, `s1.fast`"
          },
          "serial_number_filter": {
            "description": "検索対象にする製造番号。`|`で区切って複数指定することができる。指定された値で始まる製造番号を持つSubscriberの一覧を返す。"
          },
          "limit": {
            "description": "取得するSubscriberの上限"
          },
          "last_evaluated_key": {
            "description": "現ページで取得した最後のSubscriberのIMSI。このパラメータを指定することで次のSubscriber以降のリストを取得できる。"
          }
        },
        "responses": {
          "status200": {
            "description": "A list of subscibers"
          }
        }
      }
    },
    "register_subscriber": {
      "post": {
        "summary": "Register Subscriber",
        "description": "Subscriberを登録",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          },
          "subscriber": {
            "description": "subscriber"
          }
        },
        "responses": {
          "status201": {
            "description": "Subscriber登録完了"
          }
        }
      }
    },
    "get_subscriber": {
      "get": {
        "summary": "Get Subscriber",
        "description": "指定されたSubscriberの情報を返す。",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "指定されたSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "update_speedclass": {
      "post": {
        "summary": "Update Subscriber speed class",
        "description": "指定されたSubscriberの速度クラスを変更します",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "delete_session": {
      "post": {
        "summary": "Delete Session",
        "description": "指定されたSubscriberのセッションを切断します",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "activate_subscriber": {
      "post": {
        "summary": "Activate Subscriber",
        "description": "指定されたSubscriberのステータスを有効化",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "deactivate_subscriber": {
      "post": {
        "summary": "Deactivate Subscriber",
        "description": "指定されたSubscriberを無効化",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "terminate_subscriber": {
      "post": {
        "summary": "Terminate Subscriber",
        "description": "指定されたSubscriberをTerminate",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "suspend_subscriber": {
      "post": {
        "summary": "Suspend Subscriber",
        "description": "指定されたSubscriberをSuspend",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "enable_termination": {
      "post": {
        "summary": "Enable Termination of Subscriber",
        "description": "指定されたSubscriberをTerminate可能に設定する",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "disable_termination": {
      "post": {
        "summary": "Disable Termination of Subscriber",
        "description": "指定されたSubscriberをTerminate不可能に設定する",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "set_expirytime": {
      "post": {
        "summary": "Update Expiry Time of Subscriber",
        "description": "指定されたSubscriberの有効期限を更新",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          },
          "request": {
            "description": "更新後の有効期限(unixtime:ミリ秒単位)"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "unset_expirytime": {
      "post": {
        "summary": "Delete Expiry Time of Subscriber",
        "description": "指定されたSubscriberの有効期限を削除して無期限に変更",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status204": {
            "description": "当該Subscriberの有効期限を無期限に変更完了"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しないか、Subscriberに有効期限がない"
          }
        }
      }
    },
    "set_group": {
      "post": {
        "summary": "Set Group to Subscriber",
        "description": "指定されたSubscriberの所属先Groupを指定あるいは上書き変更",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          },
          "group": {
            "description": "Group（IDのみを含めばよい）"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "unset_group": {
      "post": {
        "summary": "Unset Group to Subscriber",
        "description": "指定されたSubscriberのGroup指定を解除",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しないか、SubscriberはGroupに属していない"
          }
        }
      }
    },
    "set_imei_lock": {
      "post": {
        "summary": "Set IMEI lock configuration for Subscriber.",
        "description": "指定されたSubscriberのIMEIロック設定を指定",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          },
          "imeiLock": {
            "description": "Subscriberに指定するIMEI lockの設定 （オンラインのSubscriberの現在のIMEIにロックするにはIMEIは指定しなくてもよい）"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status400": {
            "description": "IMEI文字列が無効か、オフラインのSubscriberにも関わらずIMEIが指定されていない."
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "unset_imei_lock": {
      "post": {
        "summary": "Unset IMEI lock configuration for Subscriber.",
        "description": "指定されたSubscriberのIMEIロック設定を解除",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "list_session_events": {
      "get": {
        "summary": "List Session Events",
        "description": "指定されたSubscriberのセッション作成・変更・削除のイベント履歴を返す。イベントの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          },
          "from": {
            "description": "イベントの検索範囲時刻の始まり(unixtime)"
          },
          "to": {
            "description": "イベントの検索範囲時刻の終わり(unixtime)"
          },
          "limit": {
            "description": "取得するイベント数の上限"
          },
          "last_evaluated_key": {
            "description": "現ページで取得した最後のイベントのタイムスタンプ。このパラメータを指定することで次のイベント以降のリストを取得できる。"
          }
        },
        "responses": {
          "status200": {
            "description": "A list of session events"
          }
        }
      }
    },
    "put_subscriber_tags": {
      "put": {
        "summary": "Bulk Insert or Update Subscriber Tags",
        "description": "指定されたSubscriberのタグを追加・更新",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          },
          "tags": {
            "description": "追加・更新対象のタグの配列"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "delete_subscriber_tag": {
      "delete": {
        "summary": "Delete Subscriber Tag",
        "description": "指定されたSubscriberのタグを削除",
        "parameters": {
          "imsi": {
            "description": "対象のSubscriberのIMSI"
          },
          "tag_name": {
            "description": "削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent() したものを指定する）"
          }
        },
        "responses": {
          "status204": {
            "description": "対象のタグの削除が完了"
          },
          "status404": {
            "description": "指定されたSubscriberあるいはタグが存在しない"
          }
        }
      }
    },
    "issue_subscriber_transfer_token": {
      "post": {
        "summary": "Issue Subscribers Transfer Token",
        "description": "Subscriberのオペレーター間移管用トークンを、移管先オペレーターにメールで送付する。",
        "parameters": {
          "request": {
            "description": "移管先オペレーターのメールアドレス、オペレーターID、移管対象のIMSI"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "verify_subscriber_transfer_token": {
      "post": {
        "summary": "Verify Subscriber Transfer Token",
        "description": "Subscriber移管用のトークンを確認して、移管を実施する。このAPIは移管先のOperatorで呼び出しを行う。",
        "parameters": {
         "request": {
           "description": "移管先に送付されたトークン"
         }
       },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "delete_subscriber_transfer_token": {
      "delete": {
        "summary": "Delete Subscribers Transfer Token",
        "description": "Subscriberのオペレーター間移管トークンを削除し、移管をキャンセルする。",
        "parameters": {
          "token": {
            "description": "token"
          }
        },
        "responses": {
          "status204": {
            "description": "削除を実行"
          },
          "status404": {
            "description": "トークンが存在しない"
          }
        }
      }
    },
    "get_data_from_subscriber": {
      "get": {
        "summary": "Get data sent from a subscriber.",
        "description": "指定されたサブスクライバーから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が1ページに収まらない場合は、次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。",
        "parameters": {
          "imsi": {
            "description": "データ取得対象のサブスクライバーのIMSI"
          },
          "from": {
            "description": "取得対象の期間の始まり (unixtime ミリ秒単位)"
          },
          "to": {
            "description": "取得対象の期間の終わり (unixtime ミリ秒単位)"
          },
          "sort": {
            "description": "データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。"
          },
          "limit": {
            "description": "取得するデータエントリ数の上限"
          },
          "last_evaluated_key": {
            "description": "前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。"
          }
        },
        "responses": {
          "status200": {
            "description": "データエントリのリスト"
          }
        }
      }
    },
    "cli": {
      "summary": "サブスクライバー (SIM) に関する操作を行います。",
      "description": "サブスクライバー (SIM) に関する操作を行います。"
    }
  },
  "lora_devices": {
    "list_lora_devices": {
      "get": {
        "summary": "List LoRa devices",
        "description": "条件にマッチするLoRa deviceのリストを返す。LoRa deviceの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。",
        "parameters": {
          "tag_name": {
            "description": "検索対象にするタグの名前(完全一致)。"
          },
          "tag_value": {
            "description": "検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。"
          },
          "tag_value_match_mode": {
            "description": "タグの検索条件。"
          },
          "limit": {
            "description": "取得するLoRa deviceの上限"
          },
          "last_evaluated_key": {
            "description": "現ページで取得した最後のLoRa deviceのDevice ID。このパラメータを指定することで次のLoRa device以降のリストを取得できる。"
          }
        },
        "responses": {
          "status200": {
            "description": "A list of subscibers"
          }
        }
      }
    },
    "register_lora_device": {
      "post": {
        "summary": "Register LoRa device",
        "description": "LoRa deviceを登録",
        "parameters": {
          "device_id": {
            "description": "対象のLoRa deviceのDevice ID"
          },
          "lora_device": {
            "description": "LoRa device"
          }
        },
        "responses": {
          "status201": {
            "description": "LoRa device登録完了"
          }
        }
      }
    },
    "get_lora_device": {
      "get": {
        "summary": "Get LoRa device",
        "description": "指定されたLoRa deviceの情報を返す。",
        "parameters": {
          "device_id": {
            "description": "対象のLoRa deviceのDevice ID"
          }
        },
        "responses": {
          "status200": {
            "description": "指定されたLoRa deviceの詳細情報"
          },
          "status404": {
            "description": "指定されたLoRa deviceが存在しない"
          }
        }
      }
    },
    "get_data_from_lora_device": {
      "get": {
        "summary": "Get data sent from a LoRa device.",
        "description": "指定されたLoRaデバイスから送られたデータの中で、条件に合うエントリのリストを返す。データエントリの総数が1ページに収まらない場合は、次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。",
        "parameters": {
          "device_id": {
            "description": "データ取得対象のLoRaデバイスのID"
          },
          "from": {
            "description": "取得対象の期間の始まり (unixtime ミリ秒単位)"
          },
          "to": {
            "description": "取得対象の期間の終わり (unixtime ミリ秒単位)"
          },
          "sort": {
            "description": "データエントリのソート順。下降順（最新のデータが先頭）もしくは上昇順（最も古いデータが先頭）。"
          },
          "limit": {
            "description": "取得するデータエントリ数の上限"
          },
          "last_evaluated_key": {
            "description": "前ページで取得した最後のデータエントリのタイムスタンプ。このパラメータを指定することで次のデータエントリ以降のリストを取得できる。"
          }
        },
        "responses": {
          "status200": {
            "description": "データエントリのリスト"
          }
        }
      }
    },
    "send_data_to_lora_device": {
      "post": {
        "summary": "Send data to a LoRa device.",
        "description": "指定したデバイスにデータを送信する。データはLoRa Network Serverにセットされ、次に利用可能なデータ送信スロットを使って指定デバイスに送信される。未送信のデータがLoRa Network Serverにあった場合には、最新の受信データで上書きされる。 一定時間(2時間)受け取られなかった場合、デバイス受信時に新しいメッセージを受けた場合は、メッセージは破棄されます。",
        "parameters": {
          "device_id": {
            "description": "送信先デバイスのID"
          },
          "data": {
            "description": "16進数でエンコードされたバイナリデータの文字列。バイナリデータの最大サイズは11 octets（16進数エンコードされた文字列で22文字）"
          }
        },
        "responses": {
          "status204": {
            "description": "データはLoRa Network Serverにセットされ、送信先デバイスが取得出来る状態になったことを示す。"
          },
          "status404": {
            "description": "指定されたLoRaデバイスが存在しない。"
          }
        }
      }
    },
    "terminate_lora_device": {
      "post": {
        "summary": "Terminate LoRa device",
        "description": "指定されたLoRa deviceをTerminate",
        "parameters": {
          "device_id": {
            "description": "対象のLoRa deviceのID"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のLoRa deviceの詳細情報"
          },
          "status404": {
            "description": "指定されたLoRa deviceが存在しない"
          }
        }
      }
    },
    "enable_termination": {
      "post": {
        "summary": "Enable Termination of LoRa device",
        "description": "指定されたLoRa deviceをTerminate可能に設定する",
        "parameters": {
          "device_id": {
            "description": "対象のLoRa deviceのID"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のLoRa deviceの詳細情報"
          },
          "status404": {
            "description": "指定されたLoRa deviceが存在しない"
          }
        }
      }
    },
    "disable_termination": {
      "post": {
        "summary": "Disable Termination of LoRa device",
        "description": "指定されたLoRa deviceをTerminate不可能に設定する",
        "parameters": {
          "device_id": {
            "description": "対象のLoRa deviceのID"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のLoRa deviceの詳細情報"
          },
          "status404": {
            "description": "指定されたLoRa deviceが存在しない"
          }
        }
      }
    },
    "set_group": {
      "post": {
        "summary": "Set Group to LoRa device",
        "description": "指定されたLoRa deviceの所属先Groupを指定あるいは上書き変更",
        "parameters": {
          "device_id": {
            "description": "対象のLoRa deviceのID"
          },
          "group": {
            "description": "Group（IDのみを含めばよい）"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のLoRa deviceの詳細情報"
          },
          "status404": {
            "description": "指定されたLoRa deviceが存在しない"
          }
        }
      }
    },
    "unset_group": {
      "post": {
        "summary": "Unset Group to LoRa device",
        "description": "指定されたLoRa deviceのGroup指定を解除",
        "parameters": {
          "device_id": {
            "description": "対象のLoRa deviceのID"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のLoRa deviceの詳細情報"
          },
          "status404": {
            "description": "指定されたLoRa deviceが存在しないか、LoRa deviceはGroupに属していない"
          }
        }
      }
    },
    "put_lora_device_tags": {
      "put": {
        "summary": "Bulk Insert or Update LoRa device Tags",
        "description": "指定されたLoRa deviceのタグを追加・更新",
        "parameters": {
          "device_id": {
            "description": "対象のLoRa deviceのID"
          },
          "tags": {
            "description": "追加・更新対象のタグの配列"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のLoRa deviceの詳細情報"
          },
          "status404": {
            "description": "指定されたLoRa deviceが存在しない"
          }
        }
      }
    },
    "delete_lora_device_tag": {
      "delete": {
        "summary": "Delete LoRa device Tag",
        "description": "指定されたLoRa deviceのタグを削除",
        "parameters": {
          "device_id": {
            "description": "対象のLoRa deviceのID"
          },
          "tag_name": {
            "description": "削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent() したものを指定する）"
          }
        },
        "responses": {
          "status204": {
            "description": "対象のタグの削除が完了"
          },
          "status404": {
            "description": "指定されたLoRa deviceあるいはタグが存在しない"
          }
        }
      }
    },
    "cli": {
      "summary": "LoRa device に関する操作を行います。",
      "description": "LoRa device に関する操作を行います。"
    }
  },
  "lora_gateways": {
    "list": {
      "summary": "List LoRa gateways.",
      "description": "条件にマッチするLoRa gatewayのリストを返す。LoRa gatewayの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。",
      "parameters": {
        "tag_name": {
          "description": "検索対象にするタグの名前(完全一致)。"
        },
        "tag_value": {
          "description": "検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。"
        },
        "tag_value_match_mode": {
          "description": "タグの検索条件。"
        },
        "limit": {
          "description": "一度に取得するLoRa gatewayの数の上限"
        },
        "last_evaluated_key": {
          "description": "現ページで取得した最後のLoRa gatewayのID。このパラメータを指定することで次のLoRa gateway以降のリストを取得できる。"
        }
      },
      "responses": {
        "status200": {
          "description": "LoRa gatewayのリスト"
        }
      }
    },
    "get": {
      "summary": "Get LoRa gateway.",
      "description": "指定されたLoRa gatewayの情報を返す。",
      "parameters": {
        "gateway_id": {
          "description": "対象のLoRa gatewayのID"
        }
      },
      "responses": {
        "status200": {
          "description": "指定されたLoRa gatewayの詳細情報"
        },
        "status404": {
          "description": "指定されたLoRa gatewayが存在しない"
        }
      }
    },
    "terminate": {
      "summary": "Terminate LoRa gateway.",
      "description": "指定されたLoRa gatewayをTerminate",
      "parameters": {
        "gateway_id": {
          "description": "対象のLoRa gatewayのID"
        }
      },
      "responses": {
        "status200": {
          "description": "更新後のLoRa gatewayの詳細情報"
        },
        "status404": {
          "description": "指定されたLoRa gatewayが存在しない"
        }
      }
    },
    "enable_termination": {
      "summary": "Enable Termination of LoRa gateway.",
      "description": "指定されたLoRa gatewayをTerminate可能に設定する",
      "parameters": {
        "gateway_id": {
          "description": "対象のLoRa gatewayのID"
        }
      },
      "responses": {
        "status200": {
          "description": "更新後のLoRa gatewayの詳細情報"
        },
        "status404": {
          "description": "指定されたLoRa gatewayが存在しない"
        }
      }
    },
    "disable_termination": {
      "summary": "Disable Termination of LoRa gateway.",
      "description": "指定されたLoRa gatewayをTerminate不可能に設定する",
      "parameters": {
        "gateway_id": {
          "description": "対象のLoRa gatewayのID"
        }
      },
      "responses": {
        "status200": {
          "description": "更新後のLoRa gatewayの詳細情報"
        },
        "status404": {
          "description": "指定されたLoRa gatewayが存在しない"
        }
      }
    },
    "set_network_set": {
      "summary": "Set Network Set ID of LoRa gateway.",
      "description": "指定されたLoRa gatewayのNetwork Set IDを指定あるいは上書き変更",
      "parameters": {
        "gateway_id": {
          "description": "対象のLoRa gatewayのID"
        },
        "ns_id": {
          "description": "LoRa Network Set ID"
        }
      },
      "responses": {
        "status200": {
          "description": "更新後のLoRa gatewayの詳細情報"
        },
        "status404": {
          "description": "指定されたLoRa gatewayが存在しない"
        }
      }
    },
    "unset_network_set": {
      "summary": "Unset Network Set ID of LoRa gateway.",
      "description": "指定されたLoRa gatewayのNetwork Set IDを削除",
      "parameters": {
        "gateway_id": {
          "description": "対象のLoRa gatewayのID"
        }
      },
      "responses": {
        "status200": {
          "description": "更新後のLoRa gatewayの詳細情報"
        },
        "status404": {
          "description": "指定されたLoRa gatewayが存在しない"
        }
      }
    },
    "put_tags": {
      "summary": "Bulk Insert or Update LoRa gateway Tags.",
      "description": "指定されたLoRa gatewayのタグを追加・更新",
      "parameters": {
        "gateway_id": {
          "description": "対象のLoRa deviceのID"
        },
        "tags": {
          "description": "追加・更新対象のタグの配列"
        }
      },
      "responses": {
        "status200": {
          "description": "更新後のLoRa gatewayの詳細情報"
        },
        "status404": {
          "description": "指定されたLoRa gatewayが存在しない"
        }
      }
    },
    "delete_tag": {
      "summary": "Delete LoRa gateway tag.",
      "description": "指定されたLoRa gatewayのタグを削除",
      "parameters": {
        "gateway_id": {
          "description": "対象のLoRa gatewayのID"
        },
        "tag_name": {
          "description": "削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent() したものを指定する）"
        }
      },
      "responses": {
        "status204": {
          "description": "対象のタグの削除が完了"
        },
        "status404": {
          "description": "指定されたLoRa gatewayあるいはタグが存在しない"
        }
      }
    },
    "cli": {
      "summary": "LoRa gateway に関する操作を行います。",
      "description": "LoRa gateways に関する操作を行います。"
    }
  },
  "lora_network_sets": {
    "create": {
      "summary": "Creates a LoRa network set",
      "description": "LoRa network setを作成する",
      "parameters": {
        "lora_network_set": {
          "description": "タグなど作成対象のLoRa network setに設定する付加情報"
        }
      },
      "responses": {
        "status201": {
          "description": "LoRa network setの作成に成功."
        }
      }
    },
    "list": {
      "summary": "List LoRa Network Sets.",
      "description": "条件にマッチするLoRa network setのリストを返す。LoRa network setの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。",
      "parameters": {
        "tag_name": {
          "description": "検索対象にするタグの名前(完全一致)。"
        },
        "tag_value": {
          "description": "検索対象にするタグの検索文字列。`tag_name` を指定した場合は必須。"
        },
        "tag_value_match_mode": {
          "description": "タグの検索条件。"
        },
        "limit": {
          "description": "一度に取得するLoRa network setの数の上限"
        },
        "last_evaluated_key": {
          "description": "現ページで取得した最後のLoRa network setのID。このパラメータを指定することで次以降のリストを取得できる。"
        }
      },
      "responses": {
        "status200": {
          "description": "LoRa network setのリスト"
        }
      }
      },
    "get": {
      "summary": "Get LoRa network set.",
      "description": "指定されたLoRa network setの情報を返す",
      "parameters": {
        "ns_id": {
          "description": "対象のLoRa network setのID"
        }
      },
      "responses": {
        "status200": {
          "description": "LoRa network setの詳細情報を取得完了"
        },
        "status404": {
          "description": "指定されたLoRa network setが存在しない"
        }
      }
    },
    "list_gateways": {
      "summary": "List LoRa Gateways in a Network Set.",
      "description": "指定されたNetwork Setに属するLoRa gatewayのリストを返す。LoRa gatewayの総数が1ページに収まらない場合は、レスポンス中に次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。",
      "parameters": {
        "ns_id": {
          "description": "対象のLoRa network setのID"
        },
        "limit": {
          "description": "一度に取得するLoRa gatewayの数の上限"
        },
        "last_evaluated_key": {
          "description": "現ページで取得した最後のLoRa gatewayのID。このパラメータを指定することで次のLoRa gateway以降のリストを取得できる。"
        }
      },
      "responses": {
        "status200": {
          "description": "LoRa gatewayのリスト"
        },
        "status404": {
          "description": "指定されたLoRa network setが存在しない"
        }
      }
    },
    "delete": {
      "summary": "Delete LoRa network set.",
      "description": "指定されたLoRa network setを削除する",
      "parameters": {
        "ns_id": {
          "description": "対象のLoRa network setのID"
        }
      },
      "responses": {
        "status204": {
          "description": "削除に成功"
        },
        "status404": {
          "description": "指定されたLoRa network setが存在しない"
        }
      }
    },
    "add_permission": {
      "summary": "Adds permission to a LoRa network set.",
      "description": "別のOperatorからNetwork Setが利用できるようにパーミッションを追加する。",
      "parameters": {
        "ns_id": {
          "description": "対象のLoRa network setのID"
        },
        "operator_id": {
          "description": "許可されたOperatorのリストに追加すべきOperatorのID"
        }
      },
      "responses": {
        "status200": {
          "description": "指定されたnetwork setのパーミッションを更新完了"
        },
        "status404": {
          "description": "指定されたLoRa network setが存在しない"
        }
      }
    },
    "revoke_permission": {
      "summary": "Revokes a permission from a LoRa network set.",
      "description": "指定されたLoRa network setの別のOperatorへの利用許可を取り消す",
      "parameters": {
        "ns_id": {
          "description": "対象のLoRa network setのID"
        },
        "operator_id": {
          "description": "許可されたOperatorのリストから削除すべきOperatorのID"
        }
      },
      "responses": {
        "status200": {
          "description": "指定されたLoRa network setのパーミッションを更新完了"
        },
        "status404": {
          "description": "指定されたLoRa network setが存在しない"
        }
      }
    },
    "put_tags": {
      "summary": "Bulk Insert or Update LoRa network set tags.",
      "description": "指定されたLoRa network setのタグを追加・更新",
      "parameters": {
        "ns_id": {
          "description": "対象のLoRa network setのID"
        },
        "tags": {
          "description": "追加・更新対象のタグの配列"
        }
      },
      "responses": {
        "status200": {
          "description": "更新後のLoRa network setの詳細情報"
        },
        "status404": {
          "description": "指定されたLoRa network setが存在しない"
        }
      }
    },
    "delete_tag": {
      "summary": "Delete LoRa network set tag.",
      "description": "指定されたLoRa network setのタグを削除",
      "parameters": {
        "ns_id": {
          "description": "対象のLoRa network setのID"
        },
        "tag_name": {
          "description": "削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent() したものを指定する）"
        }
      },
      "responses": {
        "status204": {
          "description": "対象のタグの削除が完了"
        },
        "status404": {
          "description": "指定されたLoRa network setあるいはタグが存在しない"
        }
      }
    },
    "cli": {
      "summary": "LoRa network set に関する操作を行います。",
      "description": "LoRa network set に関する操作を行います。"
    }
  },
  "bills": {
    "get_billing_history": {
      "get": {
        "summary": "Get billing history",
        "description": "過去の利用額履歴（無料利用枠などの割引適用後、税込）を返します。このAPIは月末締めをして確定した利用額のみ返します。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "get_latest_billing": {
      "get": {
        "summary": "Get latest bill",
        "description": "無料利用枠などの割引適用後の、直近の利用額を返します。このAPIで取得した金額は請求確定前の金額になります。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "export_latest_billing": {
      "post": {
        "summary": "Export latest billing CSV file to S3",
        "description": "直近月の利用額明細を返します。この明細には、日ごと,Subscrierごと,課金項目ごとの利用額が含まれます。このAPIで取得した金額は請求確定前の金額になります。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "get_billing": {
      "get": {
        "summary": "Get bill",
        "description": "指定した月の利用額履歴（無料利用枠などの割引適用後、税込）を返します。このAPIは月末締めをして確定した利用額のみ返します。",
        "parameters": {
          "yyyyMM": {
            "description": "year and month"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "get_billing_per_day": {
      "get": {
        "summary": "Get bill per day",
        "description": "指定した月の、日ごとの利用額明細を返します。このAPIは確定した利用額のみ返します。",
        "parameters": {
          "yyyyMM": {
            "description": "year and month"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "export_billing": {
      "post": {
        "summary": "Output billing CSV file to S3",
        "description": "指定月の利用額明細を返します。この明細には、日ごと,Subscrierごと,課金項目ごとの利用額が含まれます。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "cli": {
      "summary": "課金に関する情報を確認したりファイルへのエクスポートを行います。",
      "description": "課金に関する情報を確認したりファイルへのエクスポートを行います。"
    }
  },
  "payment": {
    "list_coupons": {
      "get": {
        "summary": "List coupons",
        "description": "現在登録されているクーポン一覧を返します。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "register_coupon": {
      "post": {
        "summary": "Register Coupon",
        "description": "クーポンを登録します。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "get_payment_transaction": {
      "get": {
        "summary": "Get payment transaction result",
        "description": "課金処理の結果を返します",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "get_payment_method": {
      "get": {
        "summary": "Get payment method information",
        "description": "現在の支払い方法を返します。propertiesに詳細情報が入っています",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "activate_payment_method": {
      "post": {
        "summary": "Activate payment method",
        "description": "エラーのある現在の支払い方法を有効化します。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "register_webpay_payment_method": {
      "post": {
        "summary": "Register credit card information for WebPay",
        "description": "WebPayでの支払い用のカード情報を登録します",
        "parameters": {
          "creditCard": {
            "description": "creditCard"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "list_payment_statements": {
      "get": {
        "summary": "List payment statements.",
        "description": "課金明細の一覧を返します。"
      }
    },
    "export_payment_statement": {
      "post": {
        "summary": "Export payment statement.",
        "description": "課金明細を出力します。"
      }
    },
    "payer_information": {
      "get": {
        "summary": "Export payer information.",
        "description": "課金明細に出力する支払い者情報を取得します。"
      },
      "post": {
        "summary": "Register payer information.",
        "description": "課金明細に出力する支払い者情報を設定します。",
        "parameters": {
          "req": {
            "description": "課金明細に登録する支払い者情報"
          }
        }
      },
      "cli": {
        "summary": "課金明細に出力する支払い者情報を取得または設定します。",
        "description": "課金明細に出力する支払い者情報を取得または設定します。"
      }
    }
  },
  "payment_history": {
    "cli": {
      "summary": "お支払い履歴を取得します。",
      "description": "お支払い履歴を取得します。"
    }
  },
  "payment_methods": {
    "cli": {
      "summary": "お支払い方法に関する操作を行います。",
      "description": "お支払い方法に関する操作を行います。"
    },
    "webpay": {
      "cli": {
        "summary": "WebPay によるお支払い方法を設定または取得します。",
        "description": "WebPay によるお支払い方法を設定または取得します。"
      }
    }
  },
  "payment_statements": {
    "cli": {
      "summary": "課金明細の一覧取得または出力を行います。",
      "description": "課金明細の一覧取得または出力を行います。"
    }
  },
  "event_handlers": {
    "list_event_handlers": {
      "get": {
        "summary": "List Event Handlers",
        "description": "イベントハンドラの一覧を返す。",
        "parameters": {
          "target": {
            "description": "target"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "create_event_handler": {
      "post": {
        "summary": "Create Event Handler",
        "description": "イベントハンドラを新規作成する。リクエストパラメータの指定方法; https://dev.soracom.io/en/docs/event_handler/",
        "parameters": {
          "req": {
            "description": "イベントハンドラの設定内容"
          }
        },
        "responses": {
          "status201": {
            "description": "Created"
          }
        }
      }
    },
    "list_event_handlers_by_subscriber": {
      "get": {
        "summary": "List Event Handlers related to Subscriber",
        "description": "対象IMSIにひもづくイベントハンドラのリストを返す。",
        "parameters": {
          "imsi": {
            "description": "imsi"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "get_event_handler": {
      "get": {
        "summary": "Get Event Handler",
        "description": "指定されたイベントハンドラの情報を返す。",
        "parameters": {
          "handler_id": {
            "description": "handler ID"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "update_event_handler": {
      "put": {
        "summary": "Update Event Handler",
        "description": "指定されたイベントハンドラを更新する。リクエストパラメータの指定方法; https://dev.soracom.io/en/docs/event_handler/",
        "parameters": {
          "handler_id": {
            "description": "handler ID"
          },
          "event_handler_model": {
            "description": "イベントハンドラの設定内容"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "delete_event_handler": {
      "delete": {
        "summary": "Delete Event Handler",
        "description": "指定されたイベントハンドラを削除する。",
        "parameters": {
          "handler_id": {
            "description": "handler ID"
          }
        },
        "responses": {
          "status204": {
            "description": "OK."
          },
          "status404": {
            "description": "EventHandler not found."
          }
        }
      }
    },
    "set_ignore_event_handler": {
      "post": {
        "summary": "Ignore Event Handler",
        "description": "指定のIMSIに対して、指定のイベントハンドラを無視する設定を追加"
      }
    },
    "delete_ignore_event_handler": {
      "delete": {
        "summary": "Delete Ignore Event Handler",
        "description": "指定のIMSIに対して、指定のイベントハンドラを無視する設定を削除"
      }
    },
    "cli": {
      "summary": "イベントハンドラーに関する操作を行います。",
      "description": "イベントハンドラーに関する操作を行います。"
    }
  },
  "files":{
    "get_exported": {
      "get": {
        "summary": "エクスポートされたファイルを取得します。",
        "description": "エクスポートされたファイルを取得します。ファイルエクスポートが完了している場合、レスポンスのurlにファイルダウンロードURLがセットされます。"
      }
    },
    "cli": {
      "summary": "エクスポートされたファイルを取得します。",
      "description": "エクスポートされたファイルを取得します。"
    }
  },
  "orders": {
    "list_orders": {
      "get": {
        "summary": "List confirmed orders.",
        "description": "発注確定済みの発注一覧を返します。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "create_quotation": {
      "post": {
        "summary": "Create Quotation",
        "description": "新規で発注見積もりの作成を行います。orderIdを/confirmにPUTすると発注が完了します。",
        "parameters": {
          "request": {
            "description": "注文品リストと配送先ID"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          },
          "status201": {
            "description": "Created"
          }
        }
      }
    },
    "get_order": {
      "get": {
        "summary": "Get confirmed order.",
        "description": "発注確定済みの発注を返します。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "cancel_order": {
      "put": {
        "summary": "Cancel order.",
        "description": "発注をキャンセルします。既に発送済みの場合はエラーが返されます。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "confirm_order": {
      "put": {
        "summary": "Confirm order.",
        "description": "与信を実施し、問題ない場合に発注を確定します。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "register_ordered_sim": {
      "post": {
        "summary": "Register subscribers for operator.",
        "description": "発注したSIMをオペレーターに登録します。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "list_ordered_subscriber": {
      "get": {
        "summary": "List ordered subscribers.",
        "description": "発注したSIMのSubscriber一覧を返します。",
        "request": {
          "last_evaluated_key": {
            "description": "直前のリクエストで取得したうち、最後のSubscriberの製造番号。レスポンスヘッダのX-Soracom-Next-Keyに含まれる値"
          },
          "limit": {
            "description": "レスポンスに含まれる最大Subscriber数"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "list_products": {
      "get": {
        "summary": "List products",
        "description": "商品一覧を返します。",
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "cli": {
      "summary": "商品の注文に関する操作を行います。",
      "description": "商品の注文に関する操作を行います。"
    }
  },
  "stats": {
    "get_air_stats": {
      "get": {
        "summary": "Get Air Usage Report of Subscriber",
        "description": "IMSI で指定した Subscriber の通信量履歴を取得する。",
        "parameters": {
          "imsi": {
            "description": "imsi"
          },
          "from": {
            "description": "集計対象時刻の始まりをunixtimeで与える"
          },
          "to": {
            "description": "集計対象時刻の終わりをunixtimeで与える"
          },
          "period": {
            "description": "集計単位。minutesは基本的に5分間隔。"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "get_beam_stats": {
      "get": {
        "summary": "Get Beam Usage Report of Subscriber",
        "description": "IMSI で指定した Subscriber のSoracom Beam利用量履歴を取得する。",
        "parameters": {
          "imsi": {
            "description": "imsi"
          },
          "from": {
            "description": "集計対象時刻の始まりをunixtimeで与える"
          },
          "to": {
            "description": "集計対象時刻の終わりをunixtimeで与える"
          },
          "period": {
            "description": "集計単位。minutesは基本的に5分間隔。"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "export_air_stats": {
      "post": {
        "summary": "Export Air Usage Report of All Subscribers",
        "description": "Operator が保有する全 Subscriber の通信量をファイルで取得する。取得対象の期間は from, to のunixtimeで指定する。履歴の詳細度は月単位。ファイルの出力先は AWS S3。ファイルの出力形式は CSV。",
        "parameters": {
          "operator_id": {
            "description": "operator_id"
          },
          "request": {
            "description": "出力するデータの期間"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "export_beam_stats": {
      "post": {
        "summary": "Export Beam Usage Report of All Subscribers",
        "description": "Operator が保有する全 Subscriber の通信量をファイルで取得する。取得対象の期間は from, to のunixtimeで指定する。履歴の詳細度は月単位。ファイルの出力先は AWS S3。ファイルの出力形式は CSV。",
        "parameters": {
          "operator_id": {
            "description": "operator ID"
          },
          "request": {
            "description": "出力するデータの期間"
          }
        },
        "responses": {
          "status200": {
            "description": "OK."
          }
        }
      }
    },
    "cli": {
      "summary": "統計情報に関する操作を行います。",
      "description": "統計情報に関する操作を行います。"
    },
    "air": {
      "cli": {
        "summary": "Air の統計情報に関する操作を行います。",
        "description": "Air の統計情報に関する操作を行います。"
      }
    },
    "beam": {
      "cli": {
        "summary": "Beam の統計情報に関する操作を行います。",
        "description": "Beam の統計情報に関する操作を行います。"
      }
    }
  },
  "groups": {
    "list_groups": {
      "get": {
        "summary": "List Groups",
        "description": "Groupの一覧を返す",
        "parameters": {
          "tag_name": {
            "description": "GroupについたTag名。完全一致するTag名が検索対象となる。tag_nameを指定した場合、tag_valueが必須。"
          },
          "tag_value": {
            "description": "GroupについたTagの値。"
          },
          "tag_value_match_mode": {
            "description": "タグの検索条件。"
          },
          "limit": {
            "description": "レスポンス1ページあたりの最大数"
          },
          "last_evaluated_key": {
            "description": "現ページで取得した最後のGroupのID。このパラメータを指定することで次のGroupから始まるリストを取得できる。"
          }
        },
        "responses": {
          "status200": {
            "description": "Groupの一覧"
          }
        }
      }
    },
    "create_group": {
      "post": {
        "summary": "Create Group",
        "description": "Groupを新規作成する",
        "parameters": {
          "tags": {
            "description": "グループに付けるタグ"
          }
        },
        "responses": {
          "status201": {
            "description": "Created"
          }
        }
      }
    },
    "get_group": {
      "get": {
        "summary": "Get Group",
        "description": "Group IDで指定されたGroupを返す",
        "parameters": {
          "group_id": {
            "description": "対象のGroupのID"
          }
        },
        "responses": {
          "status200": {
            "description": "指定されたGroup"
          },
          "status404": {
            "description": "指定されたGroupは存在しない"
          }
        }
      }
    },
    "delete_group": {
      "delete": {
        "summary": "Delete Group",
        "description": "Group IDで指定されたGroupを削除する",
        "parameters": {
          "group_id": {
            "description": "対象のGroupのID"
          }
        },
        "responses": {
          "status204": {
            "description": "指定されたGroupを削除完了"
          },
          "status404": {
            "description": "指定されたGroupは存在しない"
          }
        }
      }
    },
    "list_subscribers_in_group": {
      "get": {
        "summary": "List Subscribers in a group",
        "description": "Group IDで指定されたGroupに属するSubscriberの一覧を返す",
        "parameters": {
          "group_id": {
            "description": "対象のGroupのID"
          },
          "limit": {
            "description": "レスポンス1ページあたりの最大数"
          },
          "last_evaluated_key": {
            "description": "現ページで取得した最後のSubscriberのIMSI。このパラメータを指定することで次のSubscriber以降のリストを取得できる。"
          }
        },
        "responses": {
          "status200": {
            "description": "指定されたGroup"
          },
          "status404": {
            "description": "指定されたGroupは存在しない"
          }
        }
      }
    },
    "put_configuration_parameters": {
      "put": {
        "summary": "Update Group Configuration Parameters",
        "description": "指定されたGroupのパラメータを追加・更新",
        "parameters": {
          "group_id": {
            "description": "対象のGroup"
          },
          "namespace": {
            "description": "対象のConfiguration"
          },
          "parameters": {
            "description": "更新対象のオブジェクトの配列"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のGroup"
          },
          "status404": {
            "description": "指定されたGroupが存在しない"
          }
        }
      }
    },
    "delete_configuration_parameter": {
      "delete": {
        "summary": "Delete Group Configuration Parameters",
        "description": "指定されたGroupのパラメータを削除",
        "parameters": {
          "group_id": {
            "description": "対象のGroup"
          },
          "namespace": {
            "description": "対象のパラメータのネームスペース"
          },
          "name": {
            "description": "削除対象のパラメータ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent() したものを指定する）"
          }
        },
        "responses": {
          "status204": {
            "description": "指定されたパラメータの削除完了"
          },
          "status404": {
            "description": "指定されたGroupが存在しない"
          }
        }
      }
    },
    "put_group_tags": {
      "put": {
        "summary": "Update Group Tags",
        "description": "指定されたConfiguratio Groupのタグを追加・更新",
        "parameters": {
          "group_id": {
            "description": "対象のGroupのID"
          },
          "tags": {
            "description": "更新対象のタグの配列"
          }
        },
        "responses": {
          "status200": {
            "description": "更新後のSubscriberの詳細情報"
          },
          "status404": {
            "description": "指定されたSubscriberが存在しない"
          }
        }
      }
    },
    "delete_group_tag": {
      "delete": {
        "summary": "Delete Group Tag",
        "description": "指定されたGroupのタグを削除",
        "parameters": {
          "group_id": {
            "description": "対象のGroupのID"
          },
          "tag_name": {
            "description": "削除対象のタグ名（URL の Path の一部になるので、パーセントエンコーディングを施す。JavaScript なら encodeURIComponent() したものを指定する）"
          }
        },
        "responses": {
          "status204": {
            "description": "対象のタグの削除が完了"
          },
          "status404": {
            "description": "指定されたSubscriberあるいはタグが存在しない"
          }
        }
      }
    },
    "cli": {
      "summary": "グループに関する操作を行います。",
      "description": "グループに関する操作を行います。"
    }
  },
  "virtual_private_gateway": {
    "list_virtual_private_gateways": {
      "get": {
        "summary": "List Virtual Private Gateways",
        "description": "VPGの一覧を返す",
        "parameters": {
          "tag_name": {
            "description": "VPGについたTag名。完全一致するTag名が検索対象となる。tag_nameを指定した場合、tag_valueが必須。"
          },
          "tag_value": {
            "description": "VPGについたTagの値。"
          },
          "tag_value_match_mode": {
            "description": "タグの検索条件。"
          },
          "limit": {
            "description": "レスポンス1ページあたりの最大数"
          },
          "last_evaluated_key": {
            "description": "現ページで取得した最後のGroupのID。このパラメータを指定することで次のVPGから始まるリストを取得できる。"
          }
        },
        "responses": {
          "status200": {
            "description": "VPGの一覧"
          }
        }
      }
    },
    "create_virtual_private_gateway": {
      "post": {
        "summary": "Create Virtual Private Gateway",
        "description": "VPGを新規作成する",
        "parameters": {
          "create_virtual_private_gateway_request": {
            "description": "作成対象のVPGの情報を含むリクエスト"
          }
        },
        "responses": {
          "status201": {
            "description": "Created"
          }
        }
      }
    },
    "get_virtual_private_gateway": {
      "get": {
        "summary": "Get Virtual Private Gateway",
        "description": "指定されたVPGの情報を取得する",
        "parameters": {
          "vpg_id": {
            "description": "対象のVPGのID"
          }
        },
        "responses": {
          "status200": {
            "description": "指定されたVPG"
          },
          "status404": {
            "description": "指定されたVPGは存在しない"
          }
        }
      }
    },
    "terminate_virtual_private_gateway": {
      "post": {
        "summary": "Terminate Virtual Private Gateway",
        "description": "指定されたVPGをTerminateする",
        "parameters": {
          "vpg_id": {
            "description": "対象のVPGのID"
          }
        },
        "responses": {
          "status200": {
            "description": "指定されたVPGのTerminate作業を開始"
          },
          "status400": {
            "description": "指定されたVPGのTerminate出来ない理由が存在"
          },
          "status404": {
            "description": "指定されたVPGは存在しない"
          }
        }
      }
    },
    "open_gate": {
      "post": {
        "summary": "Open SORACOM Gate",
        "description": "指定したVPGでSORACOM Gateを有効化し、Gateを開く",
        "parameters": {
         "vpg_id": {
           "description": "対象のVPGのID"
         }
       },
       "responses": {
         "status200": {
           "description": "SORACOM Gateの有効化が完了"
         },
         "status400": {
           "description": "リクエストに誤りがある"
         },
         "status404": {
           "description": "指定されたVPGは存在しない"
         }
       }
     }
    },
    "close_gate": {
      "post": {
        "summary": "Close SORACOM Gate.",
        "description": "指定したVPGでSORACOM Gateを無効化し、Gateを閉じる",
        "parameters": {
         "vpg_id": {
           "description": "対象のVPGのID"
         }
       },
       "responses": {
         "status200": {
           "description": "SORACOM Gateの無効化が完了"
         },
         "status400": {
           "description": "リクエストに誤りがある"
         },
         "status404": {
           "description": "指定されたVPGは存在しない"
         }
       }
     }
    },
    "list_virtual_private_gateway_peers": {
      "get": {
        "summary": "List VPG Gate peers",
        "description": "VPGに登録されたGate Peerの一覧を取得する",
         "parameters": {
          "vpg_id": {
            "description": "対象のVPGのID"
          }
        },
        "responses": {
          "status200": {
            "description": "正しくVPGに登録されたGate Peerのリストが取得出来た"
          },
          "status400": {
            "description": "リクエストに誤りがある"
          },
          "status404": {
            "description": "指定されたVPGは存在しない"
          }
        }
      }
    },
    "register_virtual_private_gateway_peer": {
      "post": {
        "summary": "Register VPG Gate Peer",
        "description": "VPGにGate Peerを登録する",
        "parameters": {
          "vpg_id": {
            "description": "対象のVPGのID"
          }
        },
        "responses": {
          "status200": {
            "description": "VPGにGate Peerの登録が完了した"
          },
          "status400": {
            "description": "リクエストに誤りがある"
          },
          "status404": {
            "description": "指定されたVPGは存在しない"
          }
        }
      }
    },
    "unregister_virtual_private_gateway_peer": {
      "delete": {
        "summary": "Unregister VPG Gate Peer",
        "description": "Gate PeerをVPGから登録解除する",
        "parameters": {
          "vpg_id": {
            "description": "対象のVPGのID"
          },
          "host_id": {
            "description": "対象のPeerのID"
          }
        },
        "responses": {
          "status204": {
            "description": "Gate Peerの登録解除に成功"
          },
          "status400": {
            "description": "リクエストに誤りがある"
          },
          "status404": {
            "description": "指定されたVPGあるいはPeerは存在しない"
          }
        }
      }
    },
    "list_virtual_private_gateway_ip_address_map_entries": {
      "get": {
        "summary": "List VPG IP address map entries",
        "description": "指定されたVPGのIPアドレスマップのエントリーを取得する",
        "parameters": {
          "vpg_id": {
            "description": "対象のVPGのID"
          }
        },
        "responses": {
          "status200": {
            "description": "IPアドレスのリスト取得に成功"
          },
          "status400": {
            "description": "リクエストに誤りがある"
          },
          "status404": {
            "description": "指定されたVPGあるいはPeerは存在しない"
          }
        }
      }
    },
    "put_virtual_private_gateway_ip_address_map_entry": {
      "post": {
        "summary": "Put VPG IP address map entry",
        "description": "VPGのIPアドレスマップのエントリーを追加する",
        "parameters": {
          "vpg_id": {
            "description": "対象のVPGのID"
          }
        },
        "responses": {
          "status200": {
            "description": "IPアドレスマップのエントリー追加に成功"
          },
          "status400": {
            "description": "リクエストに誤りがある"
          },
          "status404": {
            "description": "指定されたVPGは存在しない"
          }
        }
      }
    },
    "delete_virtual_private_gateway_ip_address_map_entry": {
      "delete": {
        "summary": "Delete VPG IP address map entry",
        "description": "VPGのIPアドレスマップからエントリーを削除する",
        "parameters": {
          "vpg_id": {
            "description": "対象のVPGのID"
          },
          "key": {
            "description": "対象のKey"
          }
        },
        "responses": {
          "status204": {
            "description": "IPアドレスマップのエントリー削除に成功"
          },
          "status400": {
            "description": "リクエストに誤りがある"
          },
          "status404": {
            "description": "指定されたVPGあるいはPeerは存在しない"
          }
        }
      }
    },
    "create_vpc_peering_connection": {
      "post": {
        "summary": "Create VPC Peering Connection",
        "description": "指定されたVPGにVPC Peering Connectionを作成",
        "parameters": {
          "vpg_id": {
            "description": "対象のVPGのID"
          },
          "vpc_peering_connection": {
            "description": "作成対象のVPC Peering Connection"
          }
        },
        "responses": {
          "status201": {
            "description": "作成されたVPC Peering Connection"
          },
          "status404": {
            "description": "指定されたVPC Peering Connectionは存在しない"
          }
        }
      }
    },
    "delete_vpc_peering_connection": {
      "delete": {
        "summary": "Delete VPC Peering Connection",
        "description": "指定されたVPC Peering Connectionを削除",
        "parameters": {
          "vpg_id": {
            "description": "対象のVPGのID"
          },
          "pcx_id": {
            "description": "削除対象のVPC Peering ConnectionのID"
          }
        },
        "responses": {
          "status204": {
            "description": "指定されたVPC Peering Connectionの削除完了"
          },
          "status404": {
            "description": "指定されたVPC Peering Connectionは存在しない"
          }
        }
      }
    },
    "cli": {
      "summary": "VPG に関する操作を行います。",
      "description": "VPG (Virtual Private Gateways) に関する操作を行います。"
    }
  },
  "logs": {
    "get_logs": {
      "get": {
        "summary": "Get Logs.",
        "description": "条件に合うログエントリのリストを返す。ログエントリの総数が1ページに収まらない場合は、次のページにアクセスするためのURLを`Link`ヘッダに含めて返す。",
        "parameters": {
          "resource_type": {
            "description": "ログ取得対象のリソースのタイプ"
          },
          "resource_id": {
            "description": "ログ取得対象のリソースのID"
          },
          "service": {
            "description": "ログエントリをフィルタするためのサービス名"
          },
          "from": {
            "description": "ログ取得対象の期間の始まり (unixtime)"
          },
          "to": {
            "description": "ログ取得対象の期間の終わり (unixtime)"
          },
          "limit": {
            "description": "取得するログエントリ数の上限"
          },
          "last_evaluated_key": {
            "description": "前ページで取得した最後のログエントリのタイムスタンプ。このパラメータを指定することで次のログエントリ以降のリストを取得できる。"
          }
        },
        "responses": {
          "status200": {
            "description": "ログエントリのリスト"
          }
        }
      }
    },
    "cli": {
      "summary": "ログに関する操作を行います。",
      "description": "ログに関する操作を行います。"
    }
  },
  "completion": {
    "cli": {
      "summary": "bash 用の補完 (completion) スクリプトを生成します。"
    }
  },
  "configure": {
    "cli": {
      "summary": "コマンド実行環境（プロファイル）の設定や表示を行います。",
      "description": "コマンド実行環境（プロファイル）の設定や表示を行います。",
      "profile": {
        "prompt": "--- SORACOM CLI セットアップ ---\n%s ディレクトリがなければ作成し、そこにファイル '%s.json' を作成します。",
        "coverage_type": {
          "prompt": "\n\nカバレッジタイプを選択してください。\n\n1. Global\n2. Japan\n\n",
          "select": "選択してください (1-2) > "
        },
        "auth": {
          "prompt": "\n\n認証方法を選択してください。\n\n1. AuthKeyId と AuthKey を入力する（推奨）\n2. オペレーターのメールアドレスとパスワードを入力する\n3. SAM ユーザーの認証情報を入力する（オペレーターID、ユーザー名、パスワード）\n\n",
          "select": "選択してください (1-3) > "
        },
        "overwrite": "\nプロファイル %s はすでに存在しています。上書きしますか？ (Y/n) "
      }
    },
    "get": {
      "cli": {
        "summary": "プロファイル情報を表示します。",
        "description": "プロファイル情報を表示します。"
      }
    }
  },
  "coupons": {
    "cli": {
      "summary": "登録済みクーポンを確認したりアカウントへのクーポン登録を行います。",
      "description": "登録済みクーポンを確認したりアカウントへのクーポン登録を行います。"
    }
  },
  "data": {
    "cli": {
      "summary": "SIM からアップロードされて格納されているデータを取得します。",
      "description": "SIM からアップロードされて格納されているデータを取得します。"
    }
  },
  "products": {
    "cli": {
      "summary": "商品一覧を取得します。",
      "description": "商品一覧を取得します。"
    }
  },
  "version": {
    "cli": {
      "summary": "バージョン情報を表示します。",
      "description": "バージョン情報を表示します。"
    }
  },
  "cli": {
    "common_params": {
      "body": {
        "short_help": "リクエストの Body に指定する JSON です。@filename もしくは JSON 文字列で指定します。"
      }
    }
  }
}
