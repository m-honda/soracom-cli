# Definition of the SORACOM API
swagger: '2.0'
info:
  title: SORACOM API
  description: SORACOM API v1
  version: '20170207'
# the domain of the service
host: api.soracom.io
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json

securityDefinitions:
  api_key:
    type: apiKey
    name: X-Soracom-API-Key
    in: header
  api_token:
    type: apiKey
    name: X-Soracom-Token
    in: header

paths:

#Auth API
  /auth:
    post:
      tags: [Auth]
      summary: ${auth.auth.post.summary}
      description: ${auth.auth.post.description}
      operationId: auth
      x-soracom-cli:
        - auth
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: body
        name: auth
        description: ${auth.auth.post.parameters.auth.description}
        required: true
        schema:
         '$ref': '#/definitions/AuthRequest'
      responses:
        '200':
          description: ${auth.auth.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/AuthResponse'
        '401':
          description: ${auth.auth.post.responses.status401.description}

  '/auth/password_reset_token/issue':
    post:
      tags: [Auth]
      summary: ${auth.issue_password_reset_token.post.summary}
      description: ${auth.issue_password_reset_token.post.description}
      operationId: issuePasswordResetToken
      x-soracom-cli:
        - auth issue-password-reset-token
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: body
        name: email
        description: 'email address'
        required: true
        schema:
         '$ref': '#/definitions/IssuePasswordResetTokenRequest'
      responses:
        '200':
          description: ${auth.issue_password_reset_token.post.responses.status200.description}
        '400':
          description: ${auth.issue_password_reset_token.post.responses.status400.description}

  '/auth/password_reset_token/verify':
    post:
      tags: [Auth]
      summary: ${auth.verify_password_reset_token.post.summary}
      description: ${auth.verify_password_reset_token.post.description}
      operationId: verifyPasswordResetToken
      x-soracom-cli:
        - auth verify-password-reset-token
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: body
        name: request
        description: 'token, password'
        required: true
        schema:
         '$ref': '#/definitions/VerifyPasswordResetTokenRequest'
      responses:
        '200':
          description: ${auth.verify_password_reset_token.post.responses.status200.description}
        '400':
          description: ${auth.verify_password_reset_token.post.responses.status400.description}
        '404':
          description: ${auth.verify_password_reset_token.post.responses.status404.description}

#Credential API
  '/credentials':
    get:
      tags: [Credential]
      summary: ${credentials.list_credentials.get.summary}
      description: ${credentials.list_credentials.get.description}
      operationId: listCredentials
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - credentials list
      consumes: [application/json]
      produces: ['*/*']
      responses:
        '200':
          description: ${credentials.list_credentials.get.responses.status200.description}
          schema:
            type: array
            items: {'$ref': '#/definitions/CredentialsModel'}

  '/credentials/{credentials_id}':
    post:
      tags: [Credential]
      summary: ${credentials.create_credential.post.summary}
      description: ${credentials.create_credential.post.description}
      operationId: createCredential
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - credentials create
      consumes: [application/json;charset=UTF-8]
      produces: ['*/*']
      parameters:
      - {name: credentials_id, in: path, description: credentials_id, required: true,
        type: string}
      - in: body
        name: credentials
        description: credentials
        required: true
        schema: {'$ref': '#/definitions/CreateAndUpdateCredentialsModel'}
      responses:
        '201':
          description: ${credentials.create_credential.post.responses.status201.description}
          schema: {'$ref': '#/definitions/CredentialsModel'}
    put:
      tags: [Credential]
      summary: ${credentials.update_credential.put.summary}
      description: ${credentials.update_credential.put.description}
      operationId: updateCredential
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - credentials update
      consumes: [application/json;charset=UTF-8]
      produces: ['*/*']
      parameters:
      - {name: credentials_id, in: path, description: credentials_id, required: true,
        type: string}
      - in: body
        name: credentials
        description: credentials
        required: true
        schema: {'$ref': '#/definitions/CreateAndUpdateCredentialsModel'}
      responses:
        '200':
          description: ${credentials.update_credential.put.responses.status200.description}
          schema: {'$ref': '#/definitions/CredentialsModel'}
        '400':
          description: ${credentials.update_credential.put.responses.status400.description}
    delete:
      tags: [Credential]
      summary: ${credentials.delete_credential.delete.summary}
      description: ${credentials.delete_credential.delete.description}
      operationId: deleteCredential
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - credentials delete
      consumes: [application/json]
      produces: ['*/*']
      parameters:
      - {name: credentials_id, in: path, description: Credentials ID, required: true, type: string}
      responses:
        '204': {description: Deleted}
        '404': {description: Not Found}

#Operator API
  '/operators':
    post:
      tags: [Operator]
      summary: ${operator.create_operator.post.summary}
      description: ${operator.create_operator.post.description}
      operationId: createOperator
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - operator create
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: body
        name: request
        description: 'email, password'
        required: true
        schema:
         '$ref': '#/definitions/RegisterOperatorsRequest'
      responses:
        '201':
          description: ${operator.create_operator.post.responses.status200.description}
        '400':
          description: ${operator.create_operator.post.responses.status400.description}

  '/operators/email_change_token/issue':
    post:
      tags: [Operator]
      summary: ${operator.issue_email_change_token.post.summary}
      description: ${operator.issue_email_change_token.post.description}
      operationId: issueEmailChangeToken
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - operator issue-email-change-token
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: body
        name: request
        description: 'email'
        required: true
        schema: {'$ref': '#/definitions/IssueEmailChangeTokenRequest'}
      responses:
        '200': {description: OK}

  '/operators/email_change_token/verify':
    post:
      tags: [Operator]
      summary: ${operator.verify_email_change_token.post.summary}
      description: ${operator.verify_email_change_token.post.description}
      operationId: verifyEmailChangeToken
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - operator verify-email-change-token
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: body
        name: token
        description: 'token'
        required: true
        schema: {'$ref': '#/definitions/VerifyEmailChangeTokenRequest'}
      responses:
        '200': {description: OK}

  '/operators/verify':
    post:
      tags: [Operator]
      summary: ${operator.verify_operator.post.summary}
      description: ${operator.verify_operator.post.description}
      operationId: verifyOperator
      x-soracom-cli:
        - operator verify
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - name: token
        in: body
        description: token
        required: true
        schema:
         '$ref': '#/definitions/VerifyOperatorsRequest'
      responses:
        '200':
          description: ${operator.verify_operator.post.responses.status200.description}
        '400':
          description: ${operator.verify_operator.post.responses.status400.description}
        '404':
          description: ${operator.verify_operator.post.responses.status404.description}

  '/operators/{operator_id}':
    get:
      tags: [Operator]
      summary: ${operator.get_operator.get.summary}
      description: ${operator.get_operator.get.description}
      operationId: getOperator
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - operator get
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: path
        name: operator_id
        description: operator_id
        required: true
        type: string
      responses:
        '200':
          description: ${operator.get_operator.get.responses.status200.description}
          schema:
           '$ref': '#/definitions/GetOperatorResponse'
        '400':
          description: ${operator.get_operator.get.responses.status400.description}

  '/operators/{operator_id}/auth_keys':
    get:
      tags: [Operator]
      summary: ${operator.list_operator_auth_keys.get.summary}
      description: ${operator.list_operator_auth_keys.get.description}
      operationId: listOperatorAuthKeys
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - operator auth-keys list
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      responses:
        '200':
          description: ${operator.list_operator_auth_keys.get.responses.status200.description}
          schema:
            type: array
            items: {'$ref': '#/definitions/AuthKeyResponse'}
    post:
      tags: [Operator]
      summary: ${operator.generate_operator_auth_key.post.summary}
      description: ${operator.generate_operator_auth_key.post.description}
      operationId: generateOperatorAuthKey
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - operator auth-keys generate
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      responses:
        '200':
          description: ${operator.generate_operator_auth_key.post.responses.status200.description}
          schema: {'$ref': '#/definitions/GenerateOperatorsAuthKeyResponse'}
  '/operators/{operator_id}/auth_keys/{auth_key_id}':
    delete:
      tags: [Operator]
      summary: ${operator.delete_operator_auth_key.delete.summary}
      description: ${operator.delete_operator_auth_key.delete.description}
      operationId: deleteOperatorAuthKey
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - operator auth-keys delete
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: auth_key_id, in: path, description: auth_key_id, required: true, type: string}
      responses:
        '200': {description: OK}


  '/operators/{operator_id}/password':
    post:
      tags: [Operator]
      summary: ${operator.update_operator_password.post.summary}
      description: ${operator.update_operator_password.post.description}
      operationId: updateOperatorPassword
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - operator update-password
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: path
        name: operator_id
        description: operator_id
        required: true
        type: string
      - in: body
        name: request
        description: 'current password, new password'
        required: true
        schema:
         '$ref': '#/definitions/UpdatePasswordRequest'
      responses:
        '200':
          description: ${operator.update_operator_password.post.responses.status200.description}
        '400':
          description: ${operator.update_operator_password.post.responses.status400.description}


  '/operators/{operator_id}/support/token':
    post:
      tags: [Operator]
      summary: ${operator.generate_support_token.post.summary}
      description: ${operator.generate_support_token.post.description}
      operationId: generateSupportToken
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - operator get-support-token
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: path
        name: operator_id
        description: operator_id
        required: true
        type: string
      responses:
        '200':
          description: ${operator.generate_support_token.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/SupportTokenResponse'
        '400':
          description: ${operator.generate_support_token.post.responses.status400.description}
        '403':
          description: ${operator.generate_support_token.post.responses.status403.description}

  '/operators/{operator_id}/token':
    post:
      tags: [Operator]
      summary: ${operator.generate_auth_token.post.summary}
      description: ${operator.generate_auth_token.post.description}
      operationId: generateAuthToken
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - operator generate-api-token
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: path
        name: operator_id
        description: operator_id
        required: true
        type: string
      - in: body
        name: request
        description: 'token timeout seconds'
        required: true
        schema:
         '$ref': '#/definitions/GenerateTokenRequest'
      responses:
        '200':
          description: ${operator.generate_auth_token.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/GenerateTokenResponse'
        '400':
          description: ${operator.generate_auth_token.post.responses.status400.description}
          schema:
           '$ref': '#/definitions/APICallError'

# Role
  '/operators/{operator_id}/roles':
    get:
      tags: [Role]
      summary: ${roles.list_roles.get.summary}
      description: ${roles.list_roles.get.description}
      operationId: listRoles
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - roles list
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      responses:
        '200':
          description: ${roles.list_roles.get.responses.status200.description}
          schema:
            type: array
            items: {'$ref': '#/definitions/ListRolesResponse'}
  '/operators/{operator_id}/roles/{role_id}':
    get:
      tags: [Role]
      summary: ${roles.get_role.get.summary}
      description: ${roles.get_role.get.description}
      operationId: getRole
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - roles get
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: role_id, in: path, description: role_id, required: true, type: string}
      responses:
        '200':
          description: ${roles.get_role.get.responses.status200.description}
          schema: {'$ref': '#/definitions/RoleResponse'}
    post:
      tags: [Role]
      summary: ${roles.create_role.post.summary}
      description: ${roles.create_role.post.description}
      operationId: createRole
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - roles create
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: role_id, in: path, description: role_id, required: true, type: string}
      - in: body
        name: request
        description: 'permission'
        required: true
        schema: {'$ref': '#/definitions/CreateOrUpdateRoleRequest'}
      responses:
        '200':
          description: ${roles.create_role.post.responses.status200.description}
          schema: {'$ref': '#/definitions/CreateRoleResponse'}
    put:
      tags: [Role]
      summary: ${roles.update_role.put.summary}
      description: ${roles.update_role.put.description}
      operationId: updateRole
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - roles update
      consumes: [application/json]
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: role_id, in: path, description: role_id, required: true, type: string}
      - in: body
        name: request
        description: 'permission'
        required: true
        schema: {'$ref': '#/definitions/CreateOrUpdateRoleRequest'}
      responses:
        '200': {description: OK}

    delete:
      tags: [Role]
      summary: ${roles.delete_role.delete.summary}
      description: ${roles.delete_role.delete.description}
      operationId: deleteRole
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - roles delete
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: role_id, in: path, description: role_id, required: true, type: string}
      responses:
        '200': {description: OK}

  '/operators/{operator_id}/roles/{role_id}/users':
    get:
      tags: [Role]
      summary: ${roles.list_role_attached_users.get.summary}
      description: ${roles.list_role_attached_users.get.description}
      operationId: listRoleAttachedUsers
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - roles list-users
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: role_id, in: path, description: role_id, required: true, type: string}
      responses:
        '200':
          description: ${roles.list_role_attached_users.get.responses.status200.description}
          schema:
            type: array
            items: {'$ref': '#/definitions/UserDetailResponse'}

  '/operators/{operator_id}/users/{user_name}/roles':
    get:
      tags: [Role]
      summary: ${roles.list_user_roles.get.summary}
      description: ${roles.list_user_roles.get.description}
      operationId: listUserRoles
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users list-roles
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      responses:
        '200':
          description: ${roles.list_user_roles.get.responses.status200.description}
          schema:
            type: array
            items: {'$ref': '#/definitions/RoleResponse'}
    post:
      tags: [Role]
      summary: ${roles.attach_role.post.summary}
      description: ${roles.attach_role.post.description}
      operationId: attachRole
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users attach-role
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      - in: body
        name: request
        description: role_id
        required: true
        schema: {'$ref': '#/definitions/AttachRoleRequest'}
      responses:
        '200': {description: OK}

  '/operators/{operator_id}/users/{user_name}/roles/{role_id}':
    delete:
      tags: [Role]
      summary: ${roles.detach_role.delete.summary}
      description: ${roles.detach_role.delete.description}
      operationId: detachRole
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users detach-role
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      - {name: role_id, in: path, description: role_id, required: true, type: string}
      responses:
        '200': {description: OK}

# Shipping Address
  '/operators/{operator_id}/shipping_addresses':
    get:
      tags: [ShippingAddress]
      summary: ${shipping_addresses.list_shipping_addresses.get.summary}
      description: ${shipping_addresses.list_shipping_addresses.get.description}
      operationId: listShippingAddresses
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - shipping-addresses list
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
        - name: operator_id
          in: path
          description: operator_id
          required: true
          type: string
      responses:
        '200':
          description: ${shipping_addresses.list_shipping_addresses.get.responses.status200.description}
          schema: {'$ref': '#/definitions/ListShippingAddressResponse'}
    post:
      tags: [ShippingAddress]
      summary: ${shipping_addresses.create_shipping_address.post.summary}
      description: ${shipping_addresses.create_shipping_address.post.description}
      operationId: createShippingAddress
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - shipping-addresses create
      consumes: [application/json]
      produces: ['*/*']
      parameters:
        - name: operator_id
          in: path
          description: operator_id
          required: true
          type: string
        - name: model
          in: body
          description: model
          required: true
          schema: {'$ref': '#/definitions/ShippingAddressModel'}
      responses:
        '200':
          description: ${shipping_addresses.create_shipping_address.post.responses.status200.description}
          schema: {type: string}
        '201':
          description: shippingAddreddId
          schema: {type: string}

  '/operators/{operator_id}/shipping_addresses/{shipping_address_id}':
    get:
      tags: [ShippingAddress]
      summary: ${shipping_addresses.get_shipping_address.get.summary}
      description: ${shipping_addresses.get_shipping_address.get.description}
      operationId: getShippingAddress
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - shipping-addresses get
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
        - {name: operator_id, in: path, description: operator_id, required: true, type: string}
        - {name: shipping_address_id, in: path, description: shipping_address_id, required: true, type: string}
      responses:
        '200':
          description: ${shipping_addresses.get_shipping_address.get.responses.status200.description}
          schema: {'$ref': '#/definitions/GetShippingAddressResponse'}
    put:
      tags: [ShippingAddress]
      summary: ${shipping_addresses.update_shipping_address.put.summary}
      description: ${shipping_addresses.update_shipping_address.put.description}
      operationId: updateShippingAddress
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - shipping-addresses update
      consumes: [application/json]
      produces: ['*/*']
      parameters:
        - {name: operator_id, in: path, description: Operator ID, required: true, type: string}
        - {name: shipping_address_id, in: path, description: shipping_address_id, required: true, type: string}
        - in: body
          name: model
          description: model
          required: true
          schema: {'$ref': '#/definitions/ShippingAddressModel'}
      responses:
        '200': {description: OK}
    delete:
      tags: [ShippingAddress]
      summary: ${shipping_addresses.delete_shipping_address.delete.summary}
      description: ${shipping_addresses.delete_shipping_address.delete.description}
      operationId: deleteShippingAddress
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - shipping-addresses delete
      consumes: [application/json]
      produces: ['*/*']
      parameters:
        - {name: operator_id, in: path, description: operator_id, required: true, type: string}
        - {name: shipping_address_id, in: path, description: shipping_address_id, required: true, type: string}
      responses:
        '200': {description: OK}

# Users
  '/operators/{operator_id}/users':
    get:
      tags: [User]
      summary: ${users.list_users.get.summary}
      description: ${users.list_users.get.description}
      operationId: listUsers
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users list
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      responses:
        '200':
          description: ${users.list_users.get.responses.status200.description}
          schema:
            type: array
            items: {'$ref': '#/definitions/UserDetailResponse'}

  '/operators/{operator_id}/users/{user_name}':
    get:
      tags: [User]
      summary: ${users.get_user.get.summary}
      description: ${users.get_user.get.description}
      operationId: getUser
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users get
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      responses:
        '200':
          description: ${users.get_user.get.responses.status200.description}
          schema: {'$ref': '#/definitions/UserDetailResponse'}
    post:
      tags: [User]
      summary: ${users.create_user.post.summary}
      description: ${users.create_user.post.description}
      operationId: createUser
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users create
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      - in: body
        name: request
        description: 'description'
        required: true
        schema: {'$ref': '#/definitions/CreateUserRequest'}
      responses:
        '200': {description: OK}
        '201': {description: Created}
    put:
      tags: [User]
      summary: ${users.update_user.put.summary}
      description: ${users.update_user.put.description}
      operationId: updateUser
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users update
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      - in: body
        name: request
        description: 'description'
        required: true
        schema: {'$ref': '#/definitions/UpdateUserRequest'}
      responses:
        '200': {description: OK}
        '404':
          description: ${users.update_user.put.responses.status404.description}
          schema: {'$ref': '#/definitions/APICallError'}
    delete:
      tags: [User]
      summary: ${users.delete_user.delete.summary}
      description: ${users.delete_user.delete.description}
      operationId: deleteUser
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users delete
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      responses:
        '200': {description: OK}
        '204': {description: OK}
        '404':
          description: ${users.delete_user.delete.responses.status404.description}
          schema: {'$ref': '#/definitions/APICallError'}

  '/operators/{operator_id}/users/{user_name}/auth_keys':
    get:
      tags: [User]
      summary: ${users.list_user_auth_keys.get.summary}
      description: ${users.list_user_auth_keys.get.description}
      operationId: listUserAuthKeys
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users auth-keys list
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      responses:
        '200':
          description: ${users.list_user_auth_keys.get.responses.status200.description}
          schema:
            type: array
            items: {'$ref': '#/definitions/AuthKeyResponse'}
    post:
      tags: [User]
      summary: ${users.generate_user_auth_key.post.summary}
      description: ${users.generate_user_auth_key.post.description}
      operationId: generateUserAuthKey
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users auth-keys generate
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      responses:
        '200':
          description: ${users.generate_user_auth_key.post.responses.status200.description}
          schema: {'$ref': '#/definitions/GenerateUserAuthKeyResponse'}

  '/operators/{operator_id}/users/{user_name}/auth_keys/{auth_key_id}':
    get:
      tags: [User]
      summary: ${users.get_user_auth_key.get.summary}
      description: ${users.get_user_auth_key.get.description}
      operationId: getUserAuthKey
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users auth-keys get
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      - {name: auth_key_id, in: path, description: auth_key_id, required: true, type: string}
      responses:
        '200':
          description: ${users.get_user_auth_key.get.responses.status200.description}
          schema: {'$ref': '#/definitions/AuthKeyResponse'}
    delete:
      tags: [User]
      summary: ${users.delete_user_auth_key.delete.summary}
      description: ${users.delete_user_auth_key.delete.description}
      operationId: deleteUserAuthKey
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users auth-keys delete
      consumes: [application/json]
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      - {name: auth_key_id, in: path, description: auth_key_id, required: true, type: string}
      responses:
        '200': {description: OK}
        '204': {description: OK}
        '404':
          description: ${users.delete_user_auth_key.delete.responses.status404.description}
          schema: {'$ref': '#/definitions/APICallError'}

  '/operators/{operator_id}/users/{user_name}/password':
    get:
      tags: [User]
      summary: ${users.has_user_password.get.summary}
      description: ${users.has_user_password.get.description}
      operationId: hasUserPassword
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users password configured
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      responses:
        '200':
          description: ${users.has_user_password.get.responses.status200.description}
          schema: {'$ref': '#/definitions/GetUserPasswordResponse'}
    post:
      tags: [User]
      summary: ${users.create_user_password.post.summary}
      description: ${users.create_user_password.post.description}
      operationId: createUserPassword
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users password create
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      - in: body
        name: request
        description: 'password'
        required: true
        schema: {'$ref': '#/definitions/CreateUserPasswordRequest'}
      responses:
        '200': {description: OK}
    put:
      tags: [User]
      summary: ${users.update_user_password.put.summary}
      description: ${users.update_user_password.put.description}
      operationId: updateUserPassword
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users password update
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      - in: body
        name: request
        description: 'password'
        required: true
        schema: {'$ref': '#/definitions/UpdatePasswordRequest'}
      responses:
        '200': {description: OK}
    delete:
      tags: [User]
      summary: ${users.delete_user_password.delete.summary}
      description: ${users.delete_user_password.delete.description}
      operationId: deleteUserPassword
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users password delete
      consumes: [application/json]
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      responses:
        '200': {description: OK}
        '204': {description: OK}
        '404':
          description: ${users.delete_user_password.delete.responses.status404.description}
          schema: {'$ref': '#/definitions/APICallError'}

  '/operators/{operator_id}/users/{user_name}/permission':
    get:
      tags: [User]
      summary: ${users.get_user_permission.get.summary}
      description: ${users.get_user_permission.get.description}
      operationId: getUserPermission
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users permissions get
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      responses:
        '200':
          description: ${users.get_user_permission.get.responses.status200.description}
          schema: {'$ref': '#/definitions/GetUserPermissionResponse'}
    put:
      tags: [User]
      summary: ${users.update_user_permission.put.summary}
      description: ${users.update_user_permission.put.description}
      operationId: updateUserPermission
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - users permissions update
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: operator_id, in: path, description: operator_id, required: true, type: string}
      - {name: user_name, in: path, description: user_name, required: true, type: string}
      - in: body
        name: request
        description: 'permission'
        required: true
        schema: {'$ref': '#/definitions/SetUserPermissionRequest'}
      responses:
        '200': {description: OK}



# subscribers
  '/subscribers':
    get:
      summary: ${subscribers.list_subscribers.get.summary}
      description: ${subscribers.list_subscribers.get.description}
      operationId: listSubscribers
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers list
      parameters:
        - name: tag_name
          in: query
          description: ${subscribers.list_subscribers.get.parameters.tag_name.description}
          required: false
          type: string
        - name: tag_value
          in: query
          description: ${subscribers.list_subscribers.get.parameters.tag_value.description}
          required: false
          type: string
        - name: tag_value_match_mode
          in: query
          description: ${subscribers.list_subscribers.get.parameters.tag_value_match_mode.description}
          required: false
          type: string
          enum: [exact, prefix]
          default: exact
        - name: status_filter
          in: query
          description: ${subscribers.list_subscribers.get.parameters.status_filter.description}
          required: false
          type: string
        - name: speed_class_filter
          in: query
          description: ${subscribers.list_subscribers.get.parameters.speed_class_filter.description}
          required: false
          type: string
        - name: serial_number_filter
          in: query
          description: ${subscribers.list_subscribers.get.parameters.serial_number_filter.description}
          required: false
          type: string
        - name: limit
          in: query
          description: ${subscribers.list_subscribers.get.parameters.limit.description}
          required: false
          type: integer
        - name: last_evaluated_key
          in: query
          description: ${subscribers.list_subscribers.get.parameters.last_evaluated_key.description}
          required: false
          type: string
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.list_subscribers.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/Subscriber'

  '/subscribers/{imsi}/register':
    post:
      summary: ${subscribers.register_subscriber.post.summary}
      description: ${subscribers.register_subscriber.post.description}
      operationId: registerSubscriber
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers register
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.register_subscriber.post.parameters.imsi.description}
          required: true
          type: string
        - name: subscriber
          in: body
          description: ${subscribers.register_subscriber.post.parameters.subscriber.description}
          required: true
          schema:
           '$ref': '#/definitions/RegisterSubscribersRequest'
      tags:
        - Subscriber
      responses:
        201:
          description: ${subscribers.register_subscriber.post.responses.status201.description}
          schema:
           '$ref': '#/definitions/Subscriber'

  '/subscribers/{imsi}':
    get:
      summary: ${subscribers.get_subscriber.get.summary}
      description: ${subscribers.get_subscriber.get.description}
      operationId: getSubscriber
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers get
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.get_subscriber.get.parameters.imsi.description}
          required: true
          type: string
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.get_subscriber.get.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.get_subscriber.get.responses.status404.description}

  '/subscribers/{imsi}/update_speed_class':
    post:
      summary: ${subscribers.update_speedclass.post.summary}
      description: ${subscribers.update_speedclass.post.description}
      operationId: updateSpeedClass
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers update-speed-class
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          type: string
          description: ${subscribers.update_speedclass.post.parameters.imsi.description}
          required: true
        - name: speed_class
          in: body
          description: 'speed_class'
          required: true
          schema:
           '$ref': '#/definitions/UpdateSpeedClassRequest'
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.update_speedclass.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.update_speedclass.post.responses.status404.description}

  '/subscribers/{imsi}/delete_session':
    post:
      summary: ${subscribers.delete_session.post.summary}
      description: ${subscribers.delete_session.post.description}
      operationId: deleteSubscriberSession
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers delete-session
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          type: string
          description: ${subscribers.delete_session.post.parameters.imsi.description}
          required: true
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.delete_session.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.delete_session.post.responses.status404.description}

  '/subscribers/{imsi}/activate':
    post:
      summary: ${subscribers.activate_subscriber.post.summary}
      description: ${subscribers.activate_subscriber.post.description}
      operationId: activateSubscriber
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers activate
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.activate_subscriber.post.parameters.imsi.description}
          required: true
          type: string
          format: IMSI
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.activate_subscriber.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.activate_subscriber.post.responses.status404.description}

  '/subscribers/{imsi}/deactivate':
    post:
      summary: ${subscribers.deactivate_subscriber.post.summary}
      description: ${subscribers.deactivate_subscriber.post.description}
      operationId: deactivateSubscriber
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers deactivate
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.deactivate_subscriber.post.parameters.imsi.description}
          required: true
          type: string
          format: IMSI
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.deactivate_subscriber.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.deactivate_subscriber.post.responses.status404.description}

  '/subscribers/{imsi}/terminate':
    post:
      summary: ${subscribers.terminate_subscriber.post.summary}
      description: ${subscribers.terminate_subscriber.post.description}
      operationId: terminateSubscriber
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers terminate
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.terminate_subscriber.post.parameters.imsi.description}
          required: true
          type: string
          format: IMSI
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.terminate_subscriber.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.terminate_subscriber.post.responses.status404.description}

  '/subscribers/{imsi}/suspend':
    post:
      summary: ${subscribers.suspend_subscriber.post.summary}
      description: ${subscribers.suspend_subscriber.post.description}
      operationId: suspendSubscriber
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers suspend
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.suspend_subscriber.post.parameters.imsi.description}
          required: true
          type: string
          format: IMSI
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.suspend_subscriber.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.suspend_subscriber.post.responses.status404.description}

  '/subscribers/{imsi}/enable_termination':
    post:
      summary: ${subscribers.enable_termination.post.summary}
      description: ${subscribers.enable_termination.post.description}
      operationId: enableTermination
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers enable-termination
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.enable_termination.post.parameters.imsi.description}
          required: true
          type: string
          format: IMSI
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.enable_termination.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.enable_termination.post.responses.status404.description}

  '/subscribers/{imsi}/disable_termination':
    post:
      summary: ${subscribers.disable_termination.post.summary}
      description: ${subscribers.disable_termination.post.description}
      operationId: disableTermination
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers disable-termination
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.disable_termination.post.parameters.imsi.description}
          required: true
          type: string
          format: IMSI
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.disable_termination.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.disable_termination.post.responses.status404.description}

  '/subscribers/{imsi}/set_expiry_time':
    post:
      summary: ${subscribers.set_expirytime.post.summary}
      description: ${subscribers.set_expirytime.post.description}
      operationId: setExpiryTime
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers set-expiry-time
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.set_expirytime.post.parameters.imsi.description}
          required: true
          type: string
          format: IMSI
        - name: request
          in: body
          description: ${subscribers.set_expirytime.post.parameters.request.description}
          schema:
           '$ref': '#/definitions/ExpiryTime'
          required: true
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.set_expirytime.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.set_expirytime.post.responses.status404.description}

  '/subscribers/{imsi}/unset_expiry_time':
    post:
      summary: ${subscribers.unset_expirytime.post.summary}
      description: ${subscribers.unset_expirytime.post.description}
      operationId: unsetExpiryTime
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers unset-expiry-time
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.unset_expirytime.post.parameters.imsi.description}
          required: true
          type: string
      tags:
        - Subscriber
      responses:
        204:
          description: ${subscribers.unset_expirytime.post.responses.status204.description}
        404:
          description: ${subscribers.unset_expirytime.post.responses.status404.description}

  '/subscribers/{imsi}/set_group':
    post:
      summary: ${subscribers.set_group.post.summary}
      description: ${subscribers.set_group.post.description}
      operationId: setGroup
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers set-group
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.set_group.post.parameters.imsi.description}
          required: true
          type: string
        - name: group
          in: body
          description: ${subscribers.set_group.post.parameters.group.description}
          schema:
           '$ref': '#/definitions/SetGroupRequest'
          required: true
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.set_group.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.set_group.post.responses.status404.description}

  '/subscribers/{imsi}/unset_group':
    post:
      summary: ${subscribers.unset_group.post.summary}
      description: ${subscribers.unset_group.post.description}
      operationId: unsetGroup
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers unset-group
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.unset_group.post.parameters.imsi.description}
          required: true
          type: string
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.unset_group.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.unset_group.post.responses.status404.description}

  '/subscribers/{imsi}/set_imei_lock':
    post:
      summary: ${subscribers.set_imei_lock.post.summary}
      description: ${subscribers.set_imei_lock.post.description}
      operationId: setImeiLock
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers set-imei-lock
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.set_imei_lock.post.parameters.imsi.description}
          required: true
          type: string
        - name: imeiLock
          in: body
          description: ${subscribers.set_imei_lock.post.parameters.imeiLock.description}
          schema:
           '$ref': '#/definitions/SetImeiLockRequest'
          required: false
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.set_imei_lock.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        400:
          description: ${subscribers.set_imei_lock.post.responses.status400.description}
        404:
          description: ${subscribers.set_imei_lock.post.responses.status404.description}

  '/subscribers/{imsi}/unset_imei_lock':
    post:
      summary: ${subscribers.unset_imei_lock.post.summary}
      description: ${subscribers.unset_imei_lock.post.description}
      operationId: unsetImeiLock
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers unset-imei-lock
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.unset_imei_lock.post.parameters.imsi.description}
          required: true
          type: string
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.unset_imei_lock.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.unset_imei_lock.post.responses.status404.description}


  '/subscribers/{imsi}/events/sessions':
    get:
      summary: ${subscribers.list_session_events.get.summary}
      description: ${subscribers.list_session_events.get.description}
      operationId: listSessionEvents
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers session-events
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.list_session_events.get.parameters.imsi.description}
          required: true
          type: string
        - name: from
          in: query
          description: ${subscribers.list_session_events.get.parameters.from.description}
          required: false
          type: integer
        - name: to
          in: query
          description: ${subscribers.list_session_events.get.parameters.to.description}
          required: false
          type: integer
        - name: limit
          in: query
          description: ${subscribers.list_session_events.get.parameters.limit.description}
          required: false
          type: integer
        - name: last_evaluated_key
          in: query
          description: ${subscribers.list_session_events.get.parameters.last_evaluated_key.description}
          required: false
          type: string
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.list_session_events.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/SessionEvent'

  '/subscribers/{imsi}/tags':
    put:
      summary: ${subscribers.put_subscriber_tags.put.summary}
      description: ${subscribers.put_subscriber_tags.put.description}
      operationId: putSubscriberTags
      x-sam-operationId: putTags
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers put-tags
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.put_subscriber_tags.put.parameters.imsi.description}
          required: true
          type: string
        - name: tags
          in: body
          description: ${subscribers.put_subscriber_tags.put.parameters.tags.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/TagUpdateRequest'

          required: true
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.put_subscriber_tags.put.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${subscribers.put_subscriber_tags.put.responses.status404.description}

  '/subscribers/{imsi}/tags/{tag_name}':
    delete:
      summary: ${subscribers.delete_subscriber_tag.delete.summary}
      description: ${subscribers.delete_subscriber_tag.delete.description}
      operationId: deleteSubscriberTag
      x-sam-operationId: deleteTag
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers delete-tag
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.delete_subscriber_tag.delete.parameters.imsi.description}
          required: true
          type: string
        - name: tag_name
          in: path
          description: ${subscribers.delete_subscriber_tag.delete.parameters.tag_name.description}
          type: string
          required: true
      tags:
        - Subscriber
      responses:
        204:
          description: ${subscribers.delete_subscriber_tag.delete.responses.status204.description}
        404:
          description: ${subscribers.delete_subscriber_tag.delete.responses.status404.description}

  '/subscribers/transfer_token/issue':
    post:
      tags:
        - Subscriber
      summary: ${subscribers.issue_subscriber_transfer_token.post.summary}
      description: ${subscribers.issue_subscriber_transfer_token.post.description}
      operationId: issueSubscriberTransferToken
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers issue-transfer-token
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: body
        name: request
        description:  ${subscribers.issue_subscriber_transfer_token.post.parameters.request.description}
        required: true
        schema:
         '$ref': '#/definitions/IssueSubscriberTransferTokenRequest'
      responses:
        '200':
          description: OK
          schema:
           '$ref': '#/definitions/IssueSubscriberTransferTokenResponse'

  '/subscribers/transfer_token/verify':
    post:
      tags:
        - Subscriber
      summary: ${subscribers.verify_subscriber_transfer_token.post.summary}
      description: ${subscribers.verify_subscriber_transfer_token.post.description}
      operationId: verifySubscriberTransferToken
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers verify-transfer-token
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: body
        name: token
        description: ${subscribers.verify_subscriber_transfer_token.post.parameters.request.description}
        required: true
        schema:
         '$ref': '#/definitions/VerifySubscriberTransferTokenRequest'
      responses:
        '200':
          description: ${subscribers.verify_subscriber_transfer_token.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/VerifySubscriberTransferTokenResponse'

  '/subscribers/transfer_token/{token}':
    delete:
      tags:
        - Subscriber
      summary: ${subscribers.delete_subscriber_transfer_token.delete.summary}
      description: ${subscribers.delete_subscriber_transfer_token.delete.description}
      operationId: deleteSubscriberTransferToken
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - subscribers delete-transfer-token
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: token
          in: path
          description: ${subscribers.delete_subscriber_transfer_token.delete.parameters.token.description}
          required: true
          type: string
      responses:
        204:
          description: ${subscribers.delete_subscriber_transfer_token.delete.responses.status204.description}
        404:
          description: ${subscribers.delete_subscriber_transfer_token.delete.responses.status404.description}

  '/subscribers/{imsi}/data':
    get:
      summary: ${subscribers.get_data_from_subscriber.get.summary}
      description: ${subscribers.get_data_from_subscriber.get.description}
      operationId: getDataFromSubscriber
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - data get
        - subscribers get-data
      parameters:
        - name: imsi
          in: path
          description: ${subscribers.get_data_from_subscriber.get.parameters.imsi.description}
          required: true
          type: string
        - name: from
          in: query
          description: ${subscribers.get_data_from_subscriber.get.parameters.from.description}
          required: false
          type: integer
        - name: to
          in: query
          description: ${subscribers.get_data_from_subscriber.get.parameters.to.description}
          required: false
          type: integer
        - name: sort
          in: query
          description: ${subscribers.get_data_from_subscriber.get.parameters.sort.description}
          required: false
          type: string
          enum: [desc, asc]
          default: desc
        - name: limit
          in: query
          description: ${subscribers.get_data_from_subscriber.get.parameters.limit.description}
          required: false
          type: integer
        - name: last_evaluated_key
          in: query
          description: ${subscribers.get_data_from_subscriber.get.parameters.last_evaluated_key.description}
          required: false
          type: string
      tags:
        - Subscriber
      responses:
        200:
          description: ${subscribers.get_data_from_subscriber.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/DataEntry'

# LoRa devices
  '/lora_devices':
    get:
      summary: ${lora_devices.list_lora_devices.get.summary}
      description: ${lora_devices.list_lora_devices.get.description}
      operationId: listLoraDevices
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices list
      parameters:
        - name: tag_name
          in: query
          description: ${lora_devices.list_lora_devices.get.parameters.tag_name.description}
          required: false
          type: string
        - name: tag_value
          in: query
          description: ${lora_devices.list_lora_devices.get.parameters.tag_value.description}
          required: false
          type: string
        - name: tag_value_match_mode
          in: query
          description: ${lora_devices.list_lora_devices.get.parameters.tag_value_match_mode.description}
          required: false
          type: string
          enum: [exact, prefix]
          default: exact
        - name: limit
          in: query
          description: ${lora_devices.list_lora_devices.get.parameters.limit.description}
          required: false
          type: integer
        - name: last_evaluated_key
          in: query
          description: ${lora_devices.list_lora_devices.get.parameters.last_evaluated_key.description}
          required: false
          type: string
      tags:
        - LoraDevice
      responses:
        200:
          description: ${lora_devices.list_lora_devices.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/LoraDevice'

  '/lora_devices/{device_id}/register':
    post:
      summary: ${lora_devices.register_lora_device.post.summary}
      description: ${lora_devices.register_lora_device.post.description}
      operationId: registerLoraDevice
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices register
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.register_lora_device.post.parameters.device_id.description}
          required: true
          type: string
        - name: lora_device
          in: body
          description: ${lora_devices.register_lora_device.post.parameters.lora_device.description}
          required: true
          schema:
           '$ref': '#/definitions/RegisterLoraDeviceRequest'
      tags:
        - LoraDevice
      responses:
        201:
          description: ${lora_devices.register_lora_device.post.responses.status201.description}
          schema:
           '$ref': '#/definitions/LoraDevice'

  '/lora_devices/{device_id}':
    get:
      summary: ${lora_devices.get_lora_device.get.summary}
      description: ${lora_devices.get_lora_device.get.description}
      operationId: getLoraDevice
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices get
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.get_lora_device.get.parameters.device_id.description}
          required: true
          type: string
      tags:
        - LoraDevice
      responses:
        200:
          description: ${lora_devices.get_lora_device.get.responses.status200.description}
          schema:
           '$ref': '#/definitions/LoraDevice'
        404:
          description: ${lora_devices.get_lora_device.get.responses.status404.description}

  '/lora_devices/{device_id}/data':
    get:
      summary: ${lora_devices.get_data_from_lora_device.get.summary}
      description: ${lora_devices.get_data_from_lora_device.get.description}
      operationId: getDataFromLoraDevice
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices get-data
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.get_data_from_lora_device.get.parameters.device_id.description}
          required: true
          type: string
        - name: from
          in: query
          description: ${lora_devices.get_data_from_lora_device.get.parameters.from.description}
          required: false
          type: integer
        - name: to
          in: query
          description: ${lora_devices.get_data_from_lora_device.get.parameters.to.description}
          required: false
          type: integer
        - name: sort
          in: query
          description: ${lora_devices.get_data_from_lora_device.get.parameters.sort.description}
          required: false
          type: string
          enum: [desc, asc]
          default: desc
        - name: limit
          in: query
          description: ${lora_devices.get_data_from_lora_device.get.parameters.limit.description}
          required: false
          type: integer
        - name: last_evaluated_key
          in: query
          description: ${lora_devices.get_data_from_lora_device.get.parameters.last_evaluated_key.description}
          required: false
          type: string
      tags:
        - LoraDevice
      responses:
        200:
          description: ${lora_devices.get_data_from_lora_device.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/DataEntry'
    post:
      summary: ${lora_devices.send_data_to_lora_device.post.summary}
      description: ${lora_devices.send_data_to_lora_device.post.description}
      operationId: sendDataToLoraDevice
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices send-data
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.send_data_to_lora_device.post.parameters.device_id.description}
          required: true
          type: string
        - name: data
          in: body
          description: ${lora_devices.send_data_to_lora_device.post.parameters.data.description}
          schema:
           '$ref': '#/definitions/LoraData'
          required: true
      tags:
        - LoraDevice
      responses:
        204:
          description: ${lora_devices.send_data_to_lora_device.post.responses.status204.description}
        404:
          description: ${lora_devices.send_data_to_lora_device.post.responses.status404.description}

  '/lora_devices/{device_id}/terminate':
    post:
      summary: ${lora_devices.terminate_lora_device.post.summary}
      description: ${lora_devices.terminate_lora_device.post.description}
      operationId: terminateLoraDevice
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices terminate
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.terminate_lora_device.post.parameters.device_id.description}
          required: true
          type: string
      tags:
        - LoraDevice
      responses:
        200:
          description: ${lora_devices.terminate_lora_device.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/LoraDevice'
        404:
          description: ${lora_devices.terminate_lora_device.post.responses.status404.description}

  '/lora_devices/{device_id}/enable_termination':
    post:
      summary: ${lora_devices.enable_termination.post.summary}
      description: ${lora_devices.enable_termination.post.description}
      operationId: enableTerminationOnLoraDevice
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices enable-termination
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.enable_termination.post.parameters.device_id.description}
          required: true
          type: string
      tags:
        - LoraDevice
      responses:
        200:
          description: ${lora_devices.enable_termination.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/LoraDevice'
        404:
          description: ${lora_devices.enable_termination.post.responses.status404.description}

  '/lora_devices/{device_id}/disable_termination':
    post:
      summary: ${lora_devices.disable_termination.post.summary}
      description: ${lora_devices.disable_termination.post.description}
      operationId: disableTerminationOnLoraDevice
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices disable-termination
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.disable_termination.post.parameters.device_id.description}
          required: true
          type: string
      tags:
        - LoraDevice
      responses:
        200:
          description: ${lora_devices.disable_termination.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/LoraDevice'
        404:
          description: ${lora_devices.disable_termination.post.responses.status404.description}

  '/lora_devices/{device_id}/set_group':
    post:
      summary: ${lora_devices.set_group.post.summary}
      description: ${lora_devices.set_group.post.description}
      operationId: setLoraDeviceGroup
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices set-group
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.set_group.post.parameters.device_id.description}
          required: true
          type: string
        - name: group
          in: body
          description: ${lora_devices.set_group.post.parameters.group.description}
          schema:
           '$ref': '#/definitions/Group'
          required: true
      tags:
        - LoraDevice
      responses:
        200:
          description: ${lora_devices.set_group.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/LoraDevice'
        404:
          description: ${lora_devices.set_group.post.responses.status404.description}

  '/lora_devices/{device_id}/unset_group':
    post:
      summary: ${lora_devices.unset_group.post.summary}
      description: ${lora_devices.unset_group.post.description}
      operationId: unsetLoraDeviceGroup
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices unset-group
      consumes: [text/plain]
      produces: [application/json]
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.unset_group.post.parameters.device_id.description}
          required: true
          type: string
      tags:
        - LoraDevice
      responses:
        200:
          description: ${lora_devices.unset_group.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/LoraDevice'
        404:
          description: ${lora_devices.unset_group.post.responses.status404.description}

  '/lora_devices/{device_id}/tags':
    put:
      summary: ${lora_devices.put_lora_device_tags.put.summary}
      description: ${lora_devices.put_lora_device_tags.put.description}
      operationId: putLoraDeviceTags
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices put-tags
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.put_lora_device_tags.put.parameters.device_id.description}
          required: true
          type: string
        - name: tags
          in: body
          description: ${lora_devices.put_lora_device_tags.put.parameters.tags.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/TagUpdateRequest'

          required: true
      tags:
        - LoraDevice
      responses:
        200:
          description: ${lora_devices.put_lora_device_tags.put.responses.status200.description}
          schema:
           '$ref': '#/definitions/LoraDevice'
        404:
          description: ${lora_devices.put_lora_device_tags.put.responses.status404.description}

  '/lora_devices/{device_id}/tags/{tag_name}':
    delete:
      summary: ${lora_devices.delete_lora_device_tag.delete.summary}
      description: ${lora_devices.delete_lora_device_tag.delete.description}
      operationId: deleteLoraDeviceTag
      x-sam-operationId: deleteTag
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - lora-devices delete-tag
      parameters:
        - name: device_id
          in: path
          description: ${lora_devices.delete_lora_device_tag.delete.parameters.device_id.description}
          required: true
          type: string
        - name: tag_name
          in: path
          description: ${lora_devices.delete_lora_device_tag.delete.parameters.tag_name.description}
          type: string
          required: true
      tags:
        - LoraDevice
      responses:
        204:
          description: ${lora_devices.delete_lora_device_tag.delete.responses.status204.description}
        404:
          description: ${lora_devices.delete_lora_device_tag.delete.responses.status404.description}

# LoRa Gateways
  '/lora_gateways':
    get:
      tags:
      - LoraGateway
      summary: ${lora_gateways.list.summary}
      description: ${lora_gateways.list.description}
      operationId: listLoraGateways
      security:
        - api_key: []
        - api_token: []
      produces: [application/json]
      x-soracom-cli:
        - lora-gateways list
      parameters:
        - name: tag_name
          in: query
          description: ${lora_gateways.list.parameters.tag_name.description}
          required: false
          type: string
        - name: tag_value
          in: query
          description: ${lora_gateways.list.parameters.tag_value.description}
          required: false
          type: string
        - name: tag_value_match_mode
          in: query
          description: ${lora_gateways.list.parameters.tag_value_match_mode.description}
          required: false
          type: string
          enum: [exact, prefix]
          default: exact
        - name: limit
          in: query
          description: ${lora_gateways.list.parameters.limit.description}
          required: false
          type: integer
          format: int32d
        - name: last_evaluated_key
          in: query
          description: ${lora_gateways.list.parameters.last_evaluated_key.description}
          required: false
          type: string
      responses:
        '200':
          description: ${lora_gateways.list.responses.status200.description}
          schema:
            type: array
            items:
              '$ref': '#/definitions/LoraGateway'
  '/lora_gateways/{gateway_id}':
    get:
      tags:
      - LoraGateway
      summary: ${lora_gateways.get.summary}
      description: ${lora_gateways.get.description}
      security:
        - api_key: []
        - api_token: []
      produces: [application/json]
      x-soracom-cli:
        - lora-gateways get
      operationId: getLoraGateway
      parameters:
      - name: gateway_id
        in: path
        description: ${lora_gateways.get.parameters.gateway_id.description}
        required: true
        type: string
      responses:
        '200':
          description: ${lora_gateways.get.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraGateway'
        '404':
          description: ${lora_gateways.get.responses.status404.description}
  '/lora_gateways/{gateway_id}/disable_termination':
    post:
      tags:
      - LoraGateway
      summary: ${lora_gateways.disable_termination.summary}
      description: ${lora_gateways.disable_termination.description}
      security:
        - api_key: []
        - api_token: []
      consumes: [text/plain]
      produces: [application/json]
      x-soracom-cli:
        - lora-gateways disable-termination
      operationId: disableTerminationOnLoraGateway
      parameters:
      - name: gateway_id
        in: path
        description: ${lora_gateways.disable_termination.parameters.gateway_id.description}
        required: true
        type: string
      responses:
        '200':
          description: ${lora_gateways.disable_termination.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraGateway'
        '404':
          description: ${lora_gateways.disable_termination.responses.status404.description}
  '/lora_gateways/{gateway_id}/enable_termination':
    post:
      tags:
      - LoraGateway
      summary: ${lora_gateways.enable_termination.summary}
      description: ${lora_gateways.enable_termination.description}
      security:
        - api_key: []
        - api_token: []
      consumes: [text/plain]
      produces: [application/json]
      x-soracom-cli:
        - lora-gateways enable-termination
      operationId: enableTerminationOnLoraGateway
      parameters:
      - name: gateway_id
        in: path
        description: ${lora_gateways.enable_termination.parameters.gateway_id.description}
        required: true
        type: string
      responses:
        '200':
          description: ${lora_gateways.enable_termination.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraGateway'
        '404':
          description: ${lora_gateways.enable_termination.responses.status404.description}
  '/lora_gateways/{gateway_id}/set_network_set':
    post:
      tags:
      - LoraGateway
      summary: ${lora_gateways.set_network_set.summary}
      description: ${lora_gateways.set_network_set.description}
      security:
        - api_key: []
        - api_token: []
      consumes: [text/plain]
      produces: [application/json]
      x-soracom-cli:
        - lora-gateways set-network-set
      operationId: setLoraNetworkSet
      parameters:
      - name: gateway_id
        in: path
        description: ${lora_gateways.set_network_set.parameters.gateway_id.description}
        required: true
        type: string
      - name: ns_id
        in: body
        schema:
         '$ref': '#/definitions/SetNetworkSetRequest'
        description: ${lora_gateways.set_network_set.parameters.ns_id.description}
      responses:
        '200':
          description: ${lora_gateways.set_network_set.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraGateway'
        '404':
          description: ${lora_gateways.set_network_set.responses.status404.description}
  '/lora_gateways/{gateway_id}/unset_network_set':
    post:
      tags:
      - LoraGateway
      summary: ${lora_gateways.unset_network_set.summary}
      description: ${lora_gateways.unset_network_set.description}
      security:
        - api_key: []
        - api_token: []
      consumes: [text/plain]
      produces: [application/json]
      x-soracom-cli:
        - lora-gateways unset-network-set
      operationId: unsetLoraNetworkSet
      parameters:
      - name: gateway_id
        in: path
        description: ${lora_gateways.unset_network_set.parameters.gateway_id.description}
        required: true
        type: string
      responses:
        '200':
          description: ${lora_gateways.unset_network_set.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraGateway'
        '404':
          description: ${lora_gateways.unset_network_set.responses.status404.description}
  '/lora_gateways/{gateway_id}/tags':
    put:
      tags:
      - LoraGateway
      summary: ${lora_gateways.put_tags.summary}
      description: ${lora_gateways.put_tags.description}
      operationId: putLoraGatewayTags
      security:
        - api_key: []
        - api_token: []
      consumes: [application/json]
      produces: [application/json]
      x-soracom-cli:
        - lora-gateways put-tags
      parameters:
      - name: gateway_id
        in: path
        description: ${lora_gateways.put_tags.parameters.gateway_id.description}
        required: true
        type: string
      - name: tags
        in: body
        description: ${lora_gateways.put_tags.parameters.tags.description}
        schema:
          type: array
          items:
           '$ref': '#/definitions/TagUpdateRequest'
        required: true
      responses:
        '200':
          description: ${lora_gateways.put_tags.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraGateway'
        '404':
          description: ${lora_gateways.put_tags.responses.status404.description}
  '/lora_gateways/{gateway_id}/tags/{tag_name}':
    delete:
      tags:
      - LoraGateway
      summary: ${lora_gateways.delete_tag.summary}
      x-soracom-cli:
        - lora-gateways delete-tag
      description: ${lora_gateways.delete_tag.description}
      operationId: deleteLoraGatewayTag
      security:
        - api_key: []
        - api_token: []
      consumes: [text/plain]
      produces: [application/json]
      parameters:
      - name: gateway_id
        in: path
        description: ${lora_gateways.delete_tag.parameters.gateway_id.description}
        required: true
        type: string
      - name: tag_name
        in: path
        description: ${lora_gateways.delete_tag.parameters.tag_name.description}
        required: true
        type: string
      responses:
        '204':
          description: ${lora_gateways.delete_tag.responses.status204.description}
        '404':
          description: ${lora_gateways.delete_tag.responses.status404.description}
  '/lora_gateways/{gateway_id}/terminate':
    post:
      tags:
      - LoraGateway
      summary: ${lora_gateways.terminate.summary}
      description: ${lora_gateways.terminate.description}
      operationId: terminateLoraGateway
      x-soracom-cli:
        - lora-gateways terminate
      security:
        - api_key: []
        - api_token: []
      consumes: [text/plain]
      produces: [application/json]
      parameters:
      - name: gateway_id
        in: path
        description: ${lora_gateways.terminate.parameters.gateway_id.description}
        required: true
        type: string
      responses:
        '200':
          description: ${lora_gateways.terminate.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraGateway'
        '404':
          description: ${lora_gateways.terminate.responses.status404.description}

# LoRa Network set
  '/lora_network_sets':
    get:
      tags:
      - LoraNetworkSet
      summary: ${lora_network_sets.list.summary}
      description: ${lora_network_sets.list.description}
      operationId: listLoraNetworkSets
      security:
        - api_key: []
        - api_token: []
      produces: [application/json]
      x-soracom-cli:
        - lora-network-sets list
      parameters:
        - name: tag_name
          in: query
          description: ${lora_network_sets.list.parameters.tag_name.description}
          required: false
          type: string
        - name: tag_value
          in: query
          description: ${lora_network_sets.list.parameters.tag_value.description}
          required: false
          type: string
        - name: tag_value_match_mode
          in: query
          description: ${lora_network_sets.list.parameters.tag_value_match_mode.description}
          required: false
          type: string
          enum: [exact, prefix]
          default: exact
        - name: limit
          in: query
          description: ${lora_network_sets.list.parameters.limit.description}
          required: false
          type: integer
          format: int32d
        - name: last_evaluated_key
          in: query
          description: ${lora_network_sets.list.parameters.last_evaluated_key.description}
          required: false
          type: string
      responses:
        '200':
          description: ${lora_network_sets.list.responses.status200.description}
          schema:
            type: array
            items:
              '$ref': '#/definitions/LoraNetworkSet'
    post:
      tags:
      - LoraNetworkSet
      summary: ${lora_network_sets.create.summary}
      description: ${lora_network_sets.create.description}
      security:
        - api_key: []
        - api_token: []
      produces: [application/json]
      x-soracom-cli:
        - lora-network-sets create
      operationId: createLoraNetworkSet
      parameters:
      - in: body
        name: lora_network_set
        required: true
        description: ${lora_network_sets.create.parameters.lora_network_set.description}
        schema:
          '$ref': '#/definitions/LoraNetworkSet'
      responses:
        '201':
          description: ${lora_network_sets.create.responses.status201.description}
          schema:
            '$ref': '#/definitions/LoraNetworkSet'
  '/lora_network_sets/{ns_id}':
    get:
      tags:
      - LoraNetworkSet
      summary: ${lora_network_sets.get.summary}
      description: ${lora_network_sets.get.description}
      security:
        - api_key: []
        - api_token: []
      produces: [application/json]
      x-soracom-cli:
        - lora-network-sets get
      operationId: getLoraNetworkSet
      parameters:
      - name: ns_id
        in: path
        description: ${lora_network_sets.get.parameters.ns_id.description}
        required: true
        type: string
      responses:
        '200':
          description: ${lora_network_sets.get.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraNetworkSet'
        '404':
          description: ${lora_network_sets.get.responses.status404.description}
    delete:
      tags:
      - LoraNetworkSet
      summary: ${lora_network_sets.delete.summary}
      description: ${lora_network_sets.delete.description}
      security:
        - api_key: []
        - api_token: []
      consumes: [text/plain]
      produces: [application/json]
      operationId: deleteLoraNetworkSet
      x-soracom-cli:
        - lora-network-sets delete
      parameters:
      - name: ns_id
        in: path
        description: ${lora_network_sets.delete.parameters.ns_id.description}
        required: true
        type: string
      responses:
        '204':
          description: ${lora_network_sets.delete.responses.status204.description}
        '404':
          description: ${lora_network_sets.delete.responses.status404.description}
  '/lora_network_sets/{ns_id}/add_permission':
    post:
      tags:
      - LoraNetworkSet
      summary: ${lora_network_sets.add_permission.summary}
      description: ${lora_network_sets.add_permission.description}
      security:
        - api_key: []
        - api_token: []
      consumes: [application/json]
      produces: [application/json]
      operationId: addPermissionToLoraNetworkSet
      x-soracom-cli:
        - lora-network-sets add-permission
      parameters:
      - name: ns_id
        in: path
        description: ${lora_network_sets.add_permission.parameters.ns_id.description}
        required: true
        type: string
      - name: operator_id
        in: body
        required: true
        schema:
          '$ref': '#/definitions/UpdatePermissionRequest'
        description: ${lora_network_sets.add_permission.parameters.operator_id.description}
      responses:
        '200':
          description: ${lora_network_sets.add_permission.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraNetworkSet'
  '/lora_network_sets/{ns_id}/gateways':
    get:
      tags:
      - LoraNetworkSet
      summary: ${lora_network_sets.list_gateways.summary}
      description: ${lora_network_sets.list_gateways.description}
      operationId: listGatewaysInLoraNetworkSet
      security:
        - api_key: []
        - api_token: []
      produces: [application/json]
      x-soracom-cli:
        - lora-network-sets list-gateways
      parameters:
      - name: ns_id
        in: path
        description: ${lora_network_sets.list_gateways.parameters.ns_id.description}
        required: true
        type: string
      - name: limit
        in: query
        description: ${lora_network_sets.list_gateways.parameters.limit.description}
        required: false
        type: integer
        format: int32d
      - name: last_evaluated_key
        in: query
        description: ${lora_network_sets.list_gateways.parameters.last_evaluated_key.description}
        required: false
        type: string
      responses:
        '200':
          description: ${lora_network_sets.list_gateways.responses.status200.description}
          schema:
            type: array
            items:
              '$ref': '#/definitions/LoraGateway'
        '404':
          description: ${lora_network_sets.list_gateways.responses.status404.description}
  '/lora_network_sets/{ns_id}/revoke_permission':
    post:
      tags:
      - LoraNetworkSet
      summary: ${lora_network_sets.revoke_permission.summary}
      description: ${lora_network_sets.revoke_permission.description}
      operationId: revokePermissionFromLoraNetworkSet
      security:
        - api_key: []
        - api_token: []
      produces: [application/json]
      x-soracom-cli:
        - lora-network-sets revoke-permission
      parameters:
      - name: ns_id
        in: path
        description: ${lora_network_sets.revoke_permission.parameters.ns_id.description}
        required: true
        type: string
      - name: operator_id
        in: body
        schema:
          '$ref': '#/definitions/UpdatePermissionRequest'
        description: ${lora_network_sets.add_permission.parameters.operator_id.description}
        required: true
      responses:
        '200':
          description: ${lora_network_sets.revoke_permission.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraNetworkSet'
  '/lora_network_sets/{ns_id}/tags':
    put:
      tags:
      - LoraNetworkSet
      summary: ${lora_network_sets.put_tags.summary}
      description: ${lora_network_sets.put_tags.description}
      operationId: putLoraNetworkSetTags
      parameters:
      - name: ns_id
        in: path
        description: ${lora_network_sets.put_tags.parameters.ns_id.description}
        required: true
        type: string
      - name: tags
        in: body
        description: ${lora_network_sets.put_tags.parameters.tags.description}
        schema:
          type: array
          items:
           '$ref': '#/definitions/TagUpdateRequest'
        required: true
      responses:
        '200':
          description: ${lora_network_sets.put_tags.responses.status200.description}
          schema:
            '$ref': '#/definitions/LoraNetworkSet'
        '404':
          description: ${lora_network_sets.put_tags.responses.status404.description}
  '/lora_network_sets/{ns_id}/tags/{tagName}':
    delete:
      tags:
      - LoraNetworkSet
      summary: ${lora_network_sets.delete_tag.summary}
      description: ${lora_network_sets.delete_tag.description}
      operationId: deleteLoraNetworkSetTag
      security:
        - api_key: []
        - api_token: []
      consumes: [text/plain]
      produces: [application/json]
      x-soracom-cli:
        - lora-network-sets delete-tag
      parameters:
      - name: ns_id
        in: path
        description: ${lora_network_sets.delete_tag.parameters.ns_id.description}
        required: true
        type: string
      - name: tag_name
        in: path
        description: ${lora_network_sets.delete_tag.parameters.tag_name.description}
        required: true
        type: string
      responses:
        '204':
          description: ${lora_network_sets.delete_tag.responses.status204.description}
        '404':
          description: ${lora_network_sets.delete_tag.responses.status404.description}

# Billing
  '/bills':
    get:
      tags: [Billing]
      summary: ${bills.get_billing_history.get.summary}
      description: ${bills.get_billing_history.get.description}
      operationId: getBillingHistory
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - bills list
      consumes: [application/json]
      produces: [application/json]
      responses:
        '200':
          description: ${bills.get_billing_history.get.responses.status200.description}
          schema: {'$ref': '#/definitions/GetBillingHistoryResponse'}

  '/bills/latest':
    get:
      tags: [Billing]
      summary: ${bills.get_latest_billing.get.summary}
      description: ${bills.get_latest_billing.get.description}
      operationId: getLatestBilling
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - bills get-latest
      consumes: [application/json]
      produces: [application/json]
      responses:
        '200':
          description: OK
          schema: {'$ref': '#/definitions/GetLatestBill'}

  '/bills/latest/export':
    post:
      tags: [Billing]
      summary: ${bills.export_latest_billing.post.summary}
      description: ${bills.export_latest_billing.post.description}
      operationId: exportLatestBilling
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - bills export-latest
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: export_mode
          in: query
          description: export_mode (async, sync)
          required: false
          type: string
          enum:
            - async
            - sync
      responses:
        '200':
          description: ${bills.export_latest_billing.post.responses.status200.description}
          schema: {'$ref': '#/definitions/FileExportResponse'}

  '/bills/{yyyyMM}':
    get:
      tags: [Billing]
      summary: ${bills.get_billing.get.summary}
      description: ${bills.get_billing.get.description}
      operationId: getBilling
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - bills get
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: yyyyMM
          in: path
          description: ${bills.get_billing.get.parameters.yyyyMM.description}
          required: true
          type: string
      responses:
        '200':
          description: ${bills.get_billing.get.responses.status200.description}
          schema: {'$ref': '#/definitions/MonthlyBill'}

  '/bills/{yyyyMM}/daily':
    get:
      tags: [Billing]
      summary: ${bills.get_billing_per_day.get.summary}
      description: ${bills.get_billing_per_day.get.description}
      operationId: getBillingPerDay
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - bills get-daily
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: yyyyMM
          in: path
          description: ${bills.get_billing_per_day.get.parameters.yyyyMM.description}
          required: true
          type: string
      responses:
        '200':
          description: ${bills.get_billing_per_day.get.responses.status200.description}
          schema: {'$ref': '#/definitions/DailyBillResponse'}

  '/bills/{yyyyMM}/export':
    post:
      tags: [Billing]
      summary: ${bills.export_billing.post.summary}
      description: ${bills.export_billing.post.description}
      operationId: exportBilling
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - bills export
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - {name: yyyyMM, in: path, description: yyyyMM, required: true, type: string}
      - name: export_mode
        in: query
        description: export_mode (async, sync)
        required: false
        type: string
        enum:
          - async
          - sync
      responses:
        '200':
          description: ${bills.export_billing.post.responses.status200.description}
          schema: {'$ref': '#/definitions/FileExportResponse'}

#Payment
  '/coupons':
    get:
      tags: [Payment]
      summary: ${payment.list_coupons.get.summary}
      description: ${payment.list_coupons.get.description}
      operationId: listCoupons
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - coupons list
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      responses:
        '200':
          description: ${payment.list_coupons.get.responses.status200.description}
          schema: {'$ref': '#/definitions/ListCouponResponse'}

  '/coupons/{coupon_code}/register':
    post:
      tags: [Payment]
      summary: ${payment.register_coupon.post.summary}
      description: ${payment.register_coupon.post.description}
      operationId: registerCoupon
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - coupons register
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: coupon_code, in: path, description: coupon_code, required: true, type: string}
      responses:
        '200':
          description: ${payment.register_coupon.post.responses.status200.description}
          schema: {'$ref': '#/definitions/CouponResponse'}

  '/payment_history/transactions/{payment_transaction_id}':
    get:
      tags: [Payment]
      summary: ${payment.get_payment_transaction.get.summary}
      description: ${payment.get_payment_transaction.get.description}
      operationId: getPaymentTransaction
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - payment-history get
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: payment_transaction_id, in: path, description: payment_transaction_id,
        required: true, type: string}
      responses:
        '200':
          description: ${payment.get_payment_transaction.get.responses.status200.description}
          schema: {'$ref': '#/definitions/GetPaymentTransactionResult'}

  '/payment_methods/current':
    get:
      tags: [Payment]
      summary: ${payment.get_payment_method.get.summary}
      description: ${payment.get_payment_method.get.description}
      operationId: getPaymentMethod
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - payment-methods get-current
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      responses:
        '200':
          description: ${payment.get_payment_method.get.responses.status200.description}
          schema: {'$ref': '#/definitions/GetPaymentMethodResult'}

  '/payment_methods/current/activate':
    post:
      tags: [Payment]
      summary: ${payment.activate_payment_method.post.summary}
      description: ${payment.activate_payment_method.post.description}
      operationId: activatePaymentMethod
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - payment-methods reactivate-current
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      responses:
        '200':
          description: ${payment.activate_payment_method.post.responses.status200.description}
          schema: {type: object}

  '/payment_methods/webpay':
    post:
      tags: [Payment]
      summary: ${payment.register_webpay_payment_method.post.summary}
      description: ${payment.register_webpay_payment_method.post.description}
      operationId: registerWebPayPaymentMethod
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - payment-methods webpay register
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: body
        name: creditCard
        description: ${payment.register_webpay_payment_method.post.parameters.creditCard.description}
        required: true
        schema: {'$ref': '#/definitions/CreditCard'}
      responses:
        '200':
          description: ${payment.register_webpay_payment_method.post.responses.status200.description}
          schema: {type: object}

  '/payment_statements':
    get:
      tags: [Payment]
      summary: ${payment.list_payment_statements.get.summary}
      description: ${payment.list_payment_statements.get.description}
      operationId: listPaymentStatements
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - payment-statements list
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      responses:
        '200':
          description: OK
          schema:
            '$ref': '#/definitions/ListPaymentStatementResponse'

  '/payment_statements/{payment_statement_id}/export':
    post:
      tags: [Payment]
      summary:  ${payment.export_payment_statement.post.summary}
      description: ${payment.export_payment_statement.post.description}
      operationId: exportPaymentStatement
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - payment-statements export
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
        - name: payment_statement_id
          in: path
          description: payment_statement_id
          required: true
          type: string
        - name: export_mode
          in: query
          description: export_mode (async, sync)
          required: false
          type: string
          enum:
            - async
            - sync
      responses:
        '200':
          description: OK
          schema:
            '$ref': '#/definitions/FileExportResponse'

  '/payment_statements/payer_information':
    get:
      tags: [Payment]
      summary: ${payment.payer_information.get.summary}
      description: ${payment.payer_information.get.description}
      operationId: getPayerInformation
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - payer-information get
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      responses:
        '200':
          description: OK
          schema:
            '$ref': '#/definitions/RegisterPayerInformationModel'
    post:
      tags: [Payment]
      summary:  ${payment.payer_information.post.summary}
      description: ${payment.payer_information.post.description}
      operationId: registerPayerInformation
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - payer-information register
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
        - in: body
          name: req
          description: ${payment.payer_information.post.parameters.req.description}
          required: true
          schema:
           '$ref': '#/definitions/RegisterPayerInformationModel'
      responses:
        '201':
          description: Created

# event handlers
  '/event_handlers':
    get:
      tags: [EventHandler]
      summary: ${event_handlers.list_event_handlers.get.summary}
      description: ${event_handlers.list_event_handlers.get.description}
      operationId: listEventHandlers
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - event-handlers list
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - name: target
        in: query
        description: ${event_handlers.list_event_handlers.get.parameters.target.description}
        required: false
        type: string
        enum: [operator, imsi, tag, group]
      responses:
        '200':
          description: ${event_handlers.list_event_handlers.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/EventHandlerModel'
    post:
      tags: [EventHandler]
      summary: ${event_handlers.create_event_handler.post.summary}
      description: ${event_handlers.create_event_handler.post.description}
      operationId: createEventHandler
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - event-handlers create
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - in: body
        name: req
        description: ${event_handlers.create_event_handler.post.parameters.req.description}
        required: true
        schema:
         '$ref': '#/definitions/CreateEventHandlerRequest'
      responses:
        201:
          description: ${event_handlers.create_event_handler.post.responses.status201.description}
          schema:
           '$ref': '#/definitions/EventHandlerModel'

  '/event_handlers/subscribers/{imsi}':
    get:
      tags: [EventHandler]
      summary: ${event_handlers.list_event_handlers_by_subscriber.get.summary}
      description: ${event_handlers.list_event_handlers_by_subscriber.get.description}
      operationId: listEventHandlersBySubscriber
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - event-handlers list-for-subscriber
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - in: path
        name: imsi
        description: ${event_handlers.list_event_handlers_by_subscriber.get.parameters.imsi.description}
        required: true
        type: string
      responses:
        '200':
          description: ${event_handlers.list_event_handlers_by_subscriber.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/EventHandlerModel'
        '404': {description: not found}

  '/event_handlers/{handler_id}':
    get:
      tags: [EventHandler]
      summary: ${event_handlers.get_event_handler.get.summary}
      description: ${event_handlers.get_event_handler.get.description}
      operationId: getEventHandler
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - event-handlers get
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - in: path
        name: handler_id
        description: ${event_handlers.get_event_handler.get.parameters.handler_id.description}
        required: true
        type: string
      responses:
        '200':
          description: ${event_handlers.get_event_handler.get.responses.status200.description}
          schema:
           '$ref': '#/definitions/EventHandlerModel'
        '404':
          description: Handler not found.

    put:
      tags: [EventHandler]
      summary: ${event_handlers.update_event_handler.put.summary}
      description: ${event_handlers.update_event_handler.put.description}
      operationId: updateEventHandler
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - event-handlers update
      consumes: [application/json]
      produces: ['*/*']
      parameters:
      - in: path
        name: handler_id
        description: ${event_handlers.update_event_handler.put.parameters.handler_id.description}
        required: true
        type: string
      - in: body
        name: event_handler_model
        description:  ${event_handlers.update_event_handler.put.parameters.event_handler_model.description}
        required: true
        schema:
         '$ref': '#/definitions/UpdateEventHandlerRequest'
      responses:
        '200':
          description: ${event_handlers.update_event_handler.put.responses.status200.description}
        '400':
          description: Invalid handlerId.

    delete:
      tags: [EventHandler]
      summary: ${event_handlers.delete_event_handler.delete.summary}
      description: ${event_handlers.delete_event_handler.delete.description}
      operationId: deleteEventHandler
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - event-handlers delete
      consumes: [application/json]
      produces: ['*/*']
      parameters:
      - in: path
        name: handler_id
        description: ${event_handlers.delete_event_handler.delete.parameters.handler_id.description}
        required: true
        type: string
      responses:
        '204':
          description: ${event_handlers.delete_event_handler.delete.responses.status204.description}
        '404':
          description: ${event_handlers.delete_event_handler.delete.responses.status404.description}

  '/event_handlers/{handler_id}/subscribers/{imsi}/ignore':
    post:
      tags: [EventHandler]
      summary: ${event_handlers.set_ignore_event_handler.post.summary}
      description: ${event_handlers.set_ignore_event_handler.post.description}
      operationId: setIgnoreEventHandler
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - event-handlers ignore
      consumes: [application/json]
      produces: ['*/*']
      parameters:
      - {name: imsi, in: path, description: imsi, required: true, type: string}
      - {name: handler_id, in: path, description: handler_id, required: true, type: string}
      responses:
        '200': {description: OK}
    delete:
      tags: [EventHandler]
      summary: ${event_handlers.delete_ignore_event_handler.delete.summary}
      description: ${event_handlers.delete_ignore_event_handler.delete.description}
      operationId: deleteIgnoreEventHandler
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - event-handlers unignore
      consumes: [application/json]
      produces: ['*/*']
      parameters:
      - {name: imsi, in: path, description: imsi, required: true, type: string}
      - {name: handler_id, in: path, description: handler_id, required: true, type: string}
      responses:
        '204': {description: OK}
        '404': {description: not found}

# Files
  '/files/exported/{exported_file_id}':
    get:
      tags: [Files]
      summary: ${files.get_exported.get.summary}
      description: ${files.get_exported.get.description}
      operationId: getExportedFile
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - files get-exported
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
        - name: exported_file_id
          in: path
          description: 'file export id'
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema: { '$ref': '#/definitions/GetExportedFileResponse'}

#Order
  '/orders':
    get:
      tags: [Order]
      summary: ${orders.list_orders.get.summary}
      description: ${orders.list_orders.get.description}
      operationId: listOrders
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - orders list
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      responses:
        '200':
          description: ${orders.list_orders.get.responses.status200.description}
          schema: {'$ref': '#/definitions/ListOrderResponse'}
    post:
      tags: [Order]
      summary: ${orders.create_quotation.post.summary}
      description: ${orders.create_quotation.post.description}
      operationId: createQuotation
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - orders create
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - in: body
        name: 'request'
        description: ${orders.create_quotation.post.parameters.request.description}
        required: true
        schema: {'$ref': '#/definitions/CreateEstimatedOrderRequest'}
      responses:
        '200':
          description: ${orders.create_quotation.post.responses.status200.description}
          schema: {'$ref': '#/definitions/EstimatedOrderModel'}
        '201':
          description: ${orders.create_quotation.post.responses.status201.description}
          schema: {'$ref': '#/definitions/EstimatedOrderModel'}

  '/orders/{order_id}':
    get:
      tags: [Order]
      summary: ${orders.get_order.get.summary}
      description: ${orders.get_order.get.description}
      operationId: getOrder
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - orders get
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: order_id, in: path, description: order_id, required: true, type: string}
      responses:
        '200':
          description: ${orders.get_order.get.responses.status200.description}
          schema: {'$ref': '#/definitions/GetOrderResponse'}

  '/orders/{order_id}/cancel':
    put:
      tags: [Order]
      summary: ${orders.cancel_order.put.summary}
      description: ${orders.cancel_order.put.description}
      operationId: cancelOrder
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - orders cancel
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: order_id, in: path, description: order_id, required: true, type: string}
      responses:
        '200':
          description: ${orders.cancel_order.put.responses.status200.description}
          schema: {type: string}

  '/orders/{order_id}/confirm':
    put:
      tags: [Order]
      summary: ${orders.confirm_order.put.summary}
      description: ${orders.confirm_order.put.description}
      operationId: confirmOrder
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - orders confirm
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: order_id, in: path, description: order_id, required: true, type: string}
      responses:
        '200':
          description: ${orders.confirm_order.put.responses.status200.description}
          schema: {type: string}

  '/orders/{order_id}/subscribers/register':
    post:
      tags: [Order]
      summary: ${orders.register_ordered_sim.post.summary}
      description: ${orders.register_ordered_sim.post.description}
      operationId: registerOrderedSim
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - orders register-subscribers
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: order_id, in: path, description: order_id, required: true, type: string}
      responses:
        '200':
          description: ${orders.register_ordered_sim.post.responses.status200.description}
          schema: {type: string}

  '/orders/{order_id}/subscribers':
    get:
      tags: [Order]
      summary: ${orders.list_ordered_subscriber.get.summary}
      description: ${orders.list_ordered_subscriber.get.description}
      operationId: listOrderedSubscribers
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - orders list-subscribers
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      parameters:
      - {name: order_id, in: path, description: order_id, required: true, type: string}
      - name: last_evaluated_key
        in: query
        description: ${orders.list_ordered_subscriber.get.request.last_evaluated_key.description}
        required: false
        type: string
      - name: limit
        in: query
        description: ${orders.list_ordered_subscriber.get.request.limit.description}
        required: false
        type: integer
        format: int32
      responses:
        '200':
          description:  ${orders.list_ordered_subscriber.get.responses.status200.description}
          schema: {$ref: '#/definitions/ListOrderedSubscriberResponse'}

  '/products':
    get:
      tags: [Order]
      summary: ${orders.list_products.get.summary}
      description: ${orders.list_products.get.description}
      operationId: listProducts
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - products list
      consumes: [application/json]
      produces: [application/json;charset=UTF-8]
      responses:
        '200':
          description: ${orders.list_products.get.responses.status200.description}
          schema: {'$ref': '#/definitions/ListProductResponse'}


# stats
  '/stats/air/subscribers/{imsi}':
    get:
      tags: [Stats]
      summary: ${stats.get_air_stats.get.summary}
      description: ${stats.get_air_stats.get.description}
      operationId: getAirStats
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - stats air get
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${stats.get_air_stats.get.parameters.imsi.description}
          required: true
          type: string
        - name: from
          in: query
          description: ${stats.get_air_stats.get.parameters.from.description}
          required: true
          type: integer
        - name: to
          in: query
          description: ${stats.get_air_stats.get.parameters.to.description}
          required: true
          type: integer
        - name: period
          in: query
          description: ${stats.get_air_stats.get.parameters.period.description}
          required: true
          type: string
          enum: [month, day, minutes]
      responses:
        '200':
          description: ${stats.get_air_stats.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/AirStatsResponse'

  '/stats/beam/subscribers/{imsi}':
    get:
      tags: [Stats]
      summary: ${stats.get_beam_stats.get.summary}
      description: ${stats.get_beam_stats.get.description}
      operationId: getBeamStats
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - stats beam get
      consumes: [application/json]
      produces: [application/json]
      parameters:
        - name: imsi
          in: path
          description: ${stats.get_beam_stats.get.parameters.imsi.description}
          required: true
          type: string
        - name: from
          in: query
          description: ${stats.get_beam_stats.get.parameters.from.description}
          required: true
          type: integer
        - name: to
          in: query
          description: ${stats.get_beam_stats.get.parameters.to.description}
          required: true
          type: integer
        - name: period
          in: query
          description: ${stats.get_beam_stats.get.parameters.period.description}
          required: true
          type: string
          enum: [month, day, minutes]
      responses:
        '200':
          description: ${stats.get_beam_stats.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/BeamStatsResponse'

  '/stats/air/operators/{operator_id}/export':
    post:
      tags: [Stats]
      summary: ${stats.export_air_stats.post.summary}
      description: ${stats.export_air_stats.post.description}
      operationId: exportAirStats
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - stats air export
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: path
        name: operator_id
        description: ${stats.export_air_stats.post.parameters.operator_id.description}
        required: true
        type: string
      - name: export_mode
        in: query
        description: export_mode (async, sync)
        required: false
        type: string
        enum:
          - async
          - sync
      - in: body
        name: request
        description: ${stats.export_air_stats.post.parameters.request.description}
        required: true
        schema:
         '$ref': '#/definitions/ExportRequest'
      responses:
        '200':
          description: ${stats.export_air_stats.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/FileExportResponse'

  '/stats/beam/operators/{operator_id}/export':
    post:
      tags: [Stats]
      summary: ${stats.export_beam_stats.post.summary}
      description: ${stats.export_beam_stats.post.description}
      operationId: exportBeamStats
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - stats beam export
      consumes: [application/json]
      produces: [application/json]
      parameters:
      - in: path
        name: operator_id
        description: ${stats.export_beam_stats.post.parameters.operator_id.description}
        required: true
        type: string
      - name: export_mode
        in: query
        description: export_mode (async, sync)
        required: false
        type: string
        enum:
          - async
          - sync
      - in: body
        name: request
        description: ${stats.export_beam_stats.post.parameters.request.description}
        required: true
        schema:
          '$ref': '#/definitions/ExportRequest'
      responses:
        '200':
          description: ${stats.export_beam_stats.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/FileExportResponse'

# groups
  '/groups':
    get:
      summary: ${groups.list_groups.get.summary}
      description: ${groups.list_groups.get.description}
      operationId: listGroups
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - groups list
      parameters:
        - name: tag_name
          in: query
          description: ${groups.list_groups.get.parameters.tag_name.description}
          required: false
          type: string
        - name: tag_value
          in: query
          description: ${groups.list_groups.get.parameters.tag_value.description}
          required: false
          type: string
        - name: tag_value_match_mode
          in: query
          description: ${groups.list_groups.get.parameters.tag_value_match_mode.description}
          required: false
          type: string
          enum: [exact, prefix]
          default: exact
        - name: limit
          in: query
          description: ${groups.list_groups.get.parameters.limit.description}
          required: false
          type: integer
        - name: last_evaluated_key
          in: query
          description: ${groups.list_groups.get.parameters.last_evaluated_key.description}
          required: false
          type: string
      tags:
        - Group
      responses:
        200:
          description: ${groups.list_groups.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/Group'
    post:
      summary: ${groups.create_group.post.summary}
      description: ${groups.create_group.post.description}
      operationId: createGroup
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - groups create
      parameters:
        - name: Tags
          in: body
          description: ${groups.create_group.post.parameters.tags.description}
          schema:
           '$ref': '#/definitions/CreateGroupRequest'
          required: true
      tags:
        - Group
      responses:
        201:
          description: ${groups.create_group.post.responses.status201.description}
          schema:
           '$ref': '#/definitions/Group'

  '/groups/{group_id}':
    get:
      summary: ${groups.get_group.get.summary}
      description: ${groups.get_group.get.description}
      operationId: getGroup
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - groups get
      parameters:
        - name: group_id
          in: path
          description: ${groups.get_group.get.parameters.group_id.description}
          required: true
          type: string
      tags:
        - Group
      responses:
        200:
          description: ${groups.get_group.get.responses.status200.description}
          schema:
           '$ref': '#/definitions/Group'
        404:
          description: ${groups.get_group.get.responses.status404.description}
    delete:
      summary: ${groups.delete_group.delete.summary}
      description: ${groups.delete_group.delete.description}
      operationId: deleteGroup
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - groups delete
      parameters:
        - name: group_id
          in: path
          description: ${groups.delete_group.delete.parameters.group_id.description}
          required: true
          type: string
      tags:
        - Group
      responses:
        204:
          description: ${groups.delete_group.delete.responses.status204.description}
        404:
          description: ${groups.delete_group.delete.responses.status404.description}

  '/groups/{group_id}/subscribers':
    get:
      summary: ${groups.list_subscribers_in_group.get.summary}
      description: ${groups.list_subscribers_in_group.get.description}
      operationId: listSubscribersInGroup
      x-sam-operationId: listSubscribers
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - groups list-subscribers
      parameters:
        - name: group_id
          in: path
          description: ${groups.list_subscribers_in_group.get.parameters.group_id.description}
          required: true
          type: string
        - name: limit
          in: query
          description: ${groups.list_subscribers_in_group.get.parameters.limit.description}
          required: false
          type: integer
        - name: last_evaluated_key
          in: query
          description: ${groups.list_subscribers_in_group.get.parameters.last_evaluated_key.description}
          required: false
          type: string
      tags:
        - Group
      responses:
        200:
          description: ${groups.list_subscribers_in_group.get.responses.status200.description}
          schema:
           '$ref': '#/definitions/Group'
        404:
          description: ${groups.list_subscribers_in_group.get.responses.status404.description}

  '/groups/{group_id}/configuration/{namespace}':
    put:
      summary: ${groups.put_configuration_parameters.put.summary}
      description: ${groups.put_configuration_parameters.put.description}
      operationId: putConfigurationParameters
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - groups put-config
      parameters:
        - name: group_id
          in: path
          description: ${groups.put_configuration_parameters.put.parameters.group_id.description}
          required: true
          type: string
        - name: namespace
          in: path
          description: ${groups.put_configuration_parameters.put.parameters.namespace.description}
          required: true
          type: string
          enum:
            - SoracomAir
            - SoracomBeam
            - SoracomEndorse
            - SoracomFunnel
            - SoracomHarvest
        - name: parameters
          in: body
          description: ${groups.put_configuration_parameters.put.parameters.parameters.description}
          required: true
          schema:
            type: array
            items:
             '$ref': '#/definitions/GroupConfigurationUpdateRequest'
      tags:
        - Group
      responses:
        200:
          description: ${groups.put_configuration_parameters.put.responses.status200.description}
          schema:
           '$ref': '#/definitions/Group'
        404:
          description: ${groups.put_configuration_parameters.put.responses.status404.description}

  '/groups/{group_id}/configuration/{namespace}/{name}':
    delete:
      summary: ${groups.delete_configuration_parameter.delete.summary}
      description: ${groups.delete_configuration_parameter.delete.description}
      operationId: deleteConfigurationParameter
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - groups delete-config
      parameters:
        - name: group_id
          in: path
          description: ${groups.delete_configuration_parameter.delete.parameters.group_id.description}
          required: true
          type: string
        - name: namespace
          in: path
          description: ${groups.delete_configuration_parameter.delete.parameters.namespace.description}
          required: true
          type: string
          enum:
            - SoracomAir
            - SoracomBeam
            - SoracomEndorse
            - SoracomFunnel
            - SoracomHarvest
        - name: name
          in: path
          description: ${groups.delete_configuration_parameter.delete.parameters.name.description}
          required: true
          type: string
      tags:
        - Group
      responses:
        204:
          description: ${groups.delete_configuration_parameter.delete.responses.status204.description}
        404:
          description: ${groups.delete_configuration_parameter.delete.responses.status404.description}

  '/groups/{group_id}/tags':
    put:
      summary: ${groups.put_group_tags.put.summary}
      description: ${groups.put_group_tags.put.description}
      operationId: putGroupTags
      x-sam-operationId: putTags
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - groups put-tags
      parameters:
        - name: group_id
          in: path
          description: ${groups.put_group_tags.put.parameters.group_id.description}
          required: true
          type: string
        - name: tags
          in: body
          description: ${groups.put_group_tags.put.parameters.tags.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/TagUpdateRequest'
          required: true
      tags:
        - Group
      responses:
        200:
          description: ${groups.put_group_tags.put.responses.status200.description}
          schema:
           '$ref': '#/definitions/Subscriber'
        404:
          description: ${groups.put_group_tags.put.responses.status404.description}

  '/groups/{group_id}/tags/{tag_name}':
    delete:
      summary: ${groups.delete_group_tag.delete.summary}
      description: ${groups.delete_group_tag.delete.description}
      operationId: deleteGroupTag
      x-sam-operationId: deleteTag
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - groups delete-tag
      parameters:
        - name: group_id
          in: path
          description: ${groups.delete_group_tag.delete.parameters.group_id.description}
          required: true
          type: string
        - name: tag_name
          in: path
          description: ${groups.delete_group_tag.delete.parameters.tag_name.description}
          type: string
          required: true
      tags:
        - Group
      responses:
        204:
          description: ${groups.delete_group_tag.delete.responses.status204.description}
        404:
          description: ${groups.delete_group_tag.delete.responses.status404.description}

# Virtual Private Gateway
  '/virtual_private_gateways':
    get:
      summary: ${virtual_private_gateway.list_virtual_private_gateways.get.summary}
      description: ${virtual_private_gateway.list_virtual_private_gateways.get.description}
      x-soracom-cli:
        - vpg list
      operationId: listVirtualPrivateGateways
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: tag_name
          in: query
          description: ${virtual_private_gateway.list_virtual_private_gateways.get.parameters.tag_name.description}
          required: false
          type: string
        - name: tag_value
          in: query
          description: ${virtual_private_gateway.list_virtual_private_gateways.get.parameters.tag_value.description}
          required: false
          type: string
        - name: tag_value_match_mode
          in: query
          description: ${virtual_private_gateway.list_virtual_private_gateways.get.parameters.tag_value_match_mode.description}
          required: false
          type: string
          enum: [exact, prefix]
          default: exact
        - name: limit
          in: query
          description: ${virtual_private_gateway.list_virtual_private_gateways.get.parameters.limit.description}
          required: false
          type: integer
        - name: last_evaluated_key
          in: query
          description: ${virtual_private_gateway.list_virtual_private_gateways.get.parameters.last_evaluated_key.description}
          required: false
          type: string
      tags:
        - VirtualPrivateGateway
      responses:
        200:
          description: ${virtual_private_gateway.list_virtual_private_gateways.get.responses.status200.description}
          schema:
            type: array
            items:
              $ref: '#/definitions/VirtualPrivateGateway'
    post:
      summary: ${virtual_private_gateway.create_virtual_private_gateway.post.summary}
      description: ${virtual_private_gateway.create_virtual_private_gateway.post.description}
      x-soracom-cli:
        - vpg create
      operationId: createVirtualPrivateGateway
      consumes: [application/json]
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: CreateVirtualPrivateGatewayRequest
          in: body
          description: ${virtual_private_gateway.create_virtual_private_gateway.post.parameters.create_virtual_private_gateway_request.description}
          schema:
            $ref: '#/definitions/CreateVirtualPrivateGatewayRequest'
          required: true
      tags:
        - VirtualPrivateGateway
      responses:
        201:
          description: ${virtual_private_gateway.create_virtual_private_gateway.post.responses.status201.description}
          schema:
            $ref: '#/definitions/VirtualPrivateGateway'

  '/virtual_private_gateways/{vpg_id}':
    get:
      summary: ${virtual_private_gateway.get_virtual_private_gateway.get.summary}
      description: ${virtual_private_gateway.get_virtual_private_gateway.get.description}
      x-soracom-cli:
        - vpg get
      operationId: getVirtualPrivateGateway
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.get_virtual_private_gateway.get.parameters.vpg_id.description}
          required: true
          type: string
      tags:
        - VirtualPrivateGateway
      responses:
        200:
          description: ${virtual_private_gateway.get_virtual_private_gateway.get.responses.status200.description}
        404:
          description: ${virtual_private_gateway.get_virtual_private_gateway.get.responses.status404.description}

  '/virtual_private_gateways/{vpg_id}/terminate':
    post:
      summary: ${virtual_private_gateway.terminate_virtual_private_gateway.post.summary}
      description: ${virtual_private_gateway.terminate_virtual_private_gateway.post.description}
      x-soracom-cli:
        - vpg terminate
      operationId: terminateVirtualPrivateGateway
      consumes: [text/plain]
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.terminate_virtual_private_gateway.post.parameters.vpg_id.description}
          required: true
          type: string
      tags:
        - VirtualPrivateGateway
      responses:
        200:
          description: ${virtual_private_gateway.terminate_virtual_private_gateway.post.responses.status200.description}
        400:
          description: ${virtual_private_gateway.terminate_virtual_private_gateway.post.responses.status400.description}
        404:
          description: ${virtual_private_gateway.terminate_virtual_private_gateway.post.responses.status404.description}

  '/virtual_private_gateways/{vpg_id}/gate/open':
    post:
      summary: ${virtual_private_gateway.open_gate.post.summary}
      description: ${virtual_private_gateway.open_gate.post.description}
      x-soracom-cli:
        - vpg open-gate
      operationId: openGate
      consumes: [text/plain]
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.open_gate.post.parameters.vpg_id.description}
          required: true
          type: string
      tags:
        - VirtualPrivateGateway
      responses:
        200:
          description: ${virtual_private_gateway.open_gate.post.responses.status200.description}
        400:
          description: ${virtual_private_gateway.open_gate.post.responses.status400.description}
        404:
          description: ${virtual_private_gateway.open_gate.post.responses.status404.description}

  '/virtual_private_gateways/{vpg_id}/gate/close':
    post:
      summary: ${virtual_private_gateway.close_gate.post.summary}
      description: ${virtual_private_gateway.close_gate.post.description}
      x-soracom-cli:
        - vpg close-gate
      operationId: closeGate
      consumes: [text/plain]
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.close_gate.post.parameters.vpg_id.description}
          required: true
          type: string
      tags:
        - VirtualPrivateGateway
      responses:
        200:
          description: ${virtual_private_gateway.close_gate.post.responses.status200.description}
        400:
          description: ${virtual_private_gateway.close_gate.post.responses.status400.description}
        404:
          description: ${virtual_private_gateway.close_gate.post.responses.status404.description}

  '/virtual_private_gateways/{vpg_id}/gate/peers':
    get:
      summary: ${virtual_private_gateway.list_virtual_private_gateway_peers.get.summary}
      description: ${virtual_private_gateway.list_virtual_private_gateway_peers.get.description}
      x-soracom-cli:
        - vpg list-gate-peers
      operationId: listGatePeers
      consumes: [text/plain]
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.list_virtual_private_gateway_peers.get.parameters.vpg_id.description}
          required: true
          type: string
      tags:
        - VirtualPrivateGateway
      responses:
        200:
          description: ${virtual_private_gateway.list_virtual_private_gateway_peers.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/GatePeer'
        400:
          description: ${virtual_private_gateway.list_virtual_private_gateway_peers.get.responses.status400.description}
        404:
          description: ${virtual_private_gateway.list_virtual_private_gateway_peers.get.responses.status404.description}

    post:
      summary: ${virtual_private_gateway.register_virtual_private_gateway_peer.post.summary}
      description: ${virtual_private_gateway.register_virtual_private_gateway_peer.post.description}
      x-soracom-cli:
        - vpg register-gate-peer
      operationId: registerGatePeer
      consumes: [application/json]
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.register_virtual_private_gateway_peer.post.parameters.vpg_id.description}
          required: true
          type: string
        - name: gate_peer
          in: body
          required: true
          schema:
            $ref: '#/definitions/RegisterGatePeerRequest'
      tags:
        - VirtualPrivateGateway
      responses:
        200:
          description: ${virtual_private_gateway.register_virtual_private_gateway_peer.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/GatePeer'
        400:
          description: ${virtual_private_gateway.register_virtual_private_gateway_peer.post.responses.status400.description}
        404:
          description: ${virtual_private_gateway.register_virtual_private_gateway_peer.post.responses.status404.description}

  '/virtual_private_gateways/{vpg_id}/gate/peers/{outer_ip_address}':
    delete:
      summary: ${virtual_private_gateway.unregister_virtual_private_gateway_peer.delete.summary}
      description: ${virtual_private_gateway.unregister_virtual_private_gateway_peer.delete.description}
      x-soracom-cli:
        - vpg unregister-gate-peer
      operationId: unregisterGatePeer
      consumes: [text/plain]
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.unregister_virtual_private_gateway_peer.delete.parameters.vpg_id.description}
          required: true
          type: string
        - name: outer_ip_address
          in: path
          description: ${virtual_private_gateway.unregister_virtual_private_gateway_peer.delete.parameters.host_id.description}
          required: true
          type: string
      tags:
        - VirtualPrivateGateway
      responses:
        204:
          description: ${virtual_private_gateway.unregister_virtual_private_gateway_peer.delete.responses.status204.description}
        400:
          description: ${virtual_private_gateway.unregister_virtual_private_gateway_peer.delete.responses.status400.description}
        404:
          description: ${virtual_private_gateway.unregister_virtual_private_gateway_peer.delete.responses.status404.description}

  '/virtual_private_gateways/{vpg_id}/ip_address_map':
    get:
      summary: ${virtual_private_gateway.list_virtual_private_gateway_ip_address_map_entries.get.summary}
      description: ${virtual_private_gateway.list_virtual_private_gateway_ip_address_map_entries.get.description}
      x-soracom-cli:
        - vpg list-ip-address-map-entries
      operationId: listVirtualPrivateGatewayIpAddressMapEntries
      consumes: [text/plain]
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.list_virtual_private_gateway_ip_address_map_entries.get.parameters.vpg_id.description}
          required: true
          type: string
      tags:
        - VirtualPrivateGateway
      responses:
        200:
          description: ${virtual_private_gateway.list_virtual_private_gateway_ip_address_map_entries.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/IpAddressMapEntry'
        400:
          description: ${virtual_private_gateway.list_virtual_private_gateway_ip_address_map_entries.get.responses.status400.description}
        404:
          description: ${virtual_private_gateway.list_virtual_private_gateway_ip_address_map_entries.get.responses.status404.description}

    post:
      summary: ${virtual_private_gateway.put_virtual_private_gateway_ip_address_map_entry.post.summary}
      description: ${virtual_private_gateway.put_virtual_private_gateway_ip_address_map_entry.post.description}
      x-soracom-cli:
        - vpg put-ip-address-map-entry
      operationId: putVirtualPrivateGatewayIpAddressMapEntry
      consumes: [application/json]
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.put_virtual_private_gateway_ip_address_map_entry.post.parameters.vpg_id.description}
          required: true
          type: string
        - name: put_ip_address_map_entry_request
          in: body
          required: true
          schema:
            $ref: '#/definitions/PutIpAddressMapEntryRequest'
      tags:
        - VirtualPrivateGateway
      responses:
        200:
          description: ${virtual_private_gateway.put_virtual_private_gateway_ip_address_map_entry.post.responses.status200.description}
          schema:
           '$ref': '#/definitions/IpAddressMapEntry'
        400:
          description: ${virtual_private_gateway.put_virtual_private_gateway_ip_address_map_entry.post.responses.status400.description}
        404:
          description: ${virtual_private_gateway.put_virtual_private_gateway_ip_address_map_entry.post.responses.status404.description}

  '/virtual_private_gateways/{vpg_id}/ip_address_map/{key}':
    delete:
      summary: ${virtual_private_gateway.delete_virtual_private_gateway_ip_address_map_entry.delete.summary}
      description: ${virtual_private_gateway.delete_virtual_private_gateway_ip_address_map_entry.delete.description}
      x-soracom-cli:
        - vpg delete-ip-address-map-entry
      operationId: deleteVirtualPrivateGatewayIpAddressMapEntry
      consumes: [text/plain]
      produces: [text/plainn]
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.delete_virtual_private_gateway_ip_address_map_entry.delete.parameters.vpg_id.description}
          required: true
          type: string
        - name: key
          in: path
          description: ${virtual_private_gateway.delete_virtual_private_gateway_ip_address_map_entry.delete.parameters.key.description}
          required: true
          type: string
      tags:
        - VirtualPrivateGateway
      responses:
        204:
          description: ${virtual_private_gateway.delete_virtual_private_gateway_ip_address_map_entry.delete.responses.status204.description}
          schema:
           '$ref': '#/definitions/IpAddressMapEntry'
        400:
          description: ${virtual_private_gateway.delete_virtual_private_gateway_ip_address_map_entry.delete.responses.status400.description}
        404:
          description: ${virtual_private_gateway.delete_virtual_private_gateway_ip_address_map_entry.delete.responses.status404.description}

  '/virtual_private_gateways/{vpg_id}/vpc_peering_connections':
    post:
      summary: ${virtual_private_gateway.create_vpc_peering_connection.post.summary}
      description: ${virtual_private_gateway.create_vpc_peering_connection.post.description}
      operationId: createVpcPeeringConnection
      consumes: [application/json]
      produces: [application/json]
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - vpg create-vpc-peering-connection
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.create_vpc_peering_connection.post.parameters.vpg_id.description}
          required: true
          type: string
        - name: vpc_peering_connection
          in: body
          description: ${virtual_private_gateway.create_vpc_peering_connection.post.parameters.vpc_peering_connection.description}
          schema:
            $ref: '#/definitions/CreateVpcPeeringConnectionRequest'
          required: true
      tags:
        - VirtualPrivateGateway
      responses:
        201:
          description: ${virtual_private_gateway.create_vpc_peering_connection.post.responses.status201.description}
          schema:
            $ref: '#/definitions/CreateVpcPeeringConnectionRequest'
        404:
          description: ${virtual_private_gateway.create_vpc_peering_connection.post.responses.status404.description}

  '/virtual_private_gateways/{vpg_id}/vpc_peering_connections/{pcx_id}':
    delete:
      summary: ${virtual_private_gateway.delete_vpc_peering_connection.delete.summary}
      description: ${virtual_private_gateway.delete_vpc_peering_connection.delete.description}
      operationId: deleteVpcPeeringConnection
      x-soracom-cli:
        - vpg delete-vpc-peering-connection
      security:
        - api_key: []
        - api_token: []
      parameters:
        - name: vpg_id
          in: path
          description: ${virtual_private_gateway.delete_vpc_peering_connection.delete.parameters.vpg_id.description}
          required: true
          type: string
        - name: pcx_id
          in: path
          description: ${virtual_private_gateway.delete_vpc_peering_connection.delete.parameters.pcx_id.description}
          required: true
          type: string
      tags:
        - VirtualPrivateGateway
      responses:
        204:
          description: ${virtual_private_gateway.delete_vpc_peering_connection.delete.responses.status204.description}
        404:
          description: ${virtual_private_gateway.delete_vpc_peering_connection.delete.responses.status404.description}

# logs
  '/logs':
    get:
      summary: ${logs.get_logs.get.summary}
      description: ${logs.get_logs.get.description}
      operationId: getLogs
      security:
        - api_key: []
        - api_token: []
      x-soracom-cli:
        - logs get
      parameters:
        - name: resource_type
          in: query
          description: ${logs.get_logs.get.parameters.resource_type.description}
          required: false
          type: string
          enum: ['Subscriber','EventHandler','VirtualPrivateGateway']
        - name: resource_id
          in: query
          description: ${logs.get_logs.get.parameters.resource_id.description}
          required: false
          type: string
        - name: service
          in: query
          description: ${logs.get_logs.get.parameters.service.description}
          required: false
          type: string
          enum: ['Air','Beam','Canal','Direct','Door','Endorse','Funnel','Gate']
        - name: from
          in: query
          description: ${logs.get_logs.get.parameters.from.description}
          required: false
          type: integer
        - name: to
          in: query
          description: ${logs.get_logs.get.parameters.to.description}
          required: false
          type: integer
        - name: limit
          in: query
          description: ${logs.get_logs.get.parameters.limit.description}
          required: false
          type: integer
        - name: last_evaluated_key
          in: query
          description: ${logs.get_logs.get.parameters.last_evaluated_key.description}
          required: false
          type: string
      tags:
        - Log
      responses:
        200:
          description: ${logs.get_logs.get.responses.status200.description}
          schema:
            type: array
            items:
             '$ref': '#/definitions/LogEntry'

definitions:

  Subscriber:
    properties:
      apn:
        type: string
      createdAt:
        type: integer
        format: int64
      expiredAt:
        type: integer
        format: int64
      expiryAction:
        type: string
      groupId:
        type: string
      iccid:
        type: string
      imeiLock:
        '$ref': '#/definitions/ImeiLock'
      imsi:
        type: string
      ipAddress:
        type: string
      lastModifiedAt:
        type: integer
        format: int64
      moduleType:
        type: string
      msisdn:
        type: string
      operatorId:
        type: string
      plan:
        type: integer
      serialNumber:
        type: string
      sessionStatus:
        '$ref': '#/definitions/SessionStatus'
      speedClass:
        type: string
      status:
        type: string
      tags:
        '$ref': '#/definitions/Map'
      terminationEnabled:
        type: boolean

  ExpiryTime:
    properties:
      expiryTime:
        type: integer
        format: int64
      expiryAction:
        type: string
        enum:
          - doNothing
          - deleteSession
          - deactivate
          - terminate
    required:
      - expiryTime

  SessionStatus:
    properties:
      dnsServers:
        type: array
        items: {type: string}
      imei:
        type: string
      lastUpdatedAt:
        type: integer
        format: int64
      online:
        type: boolean
      ueIpAddress:
        type: string
      vpgId:
        type: string
      gatewayPrivateIpAddress:
        type: string
      gatewayPublicIpAddress:
        type: string

  SessionEvent:
    properties:
      operatorId:
        type: string
      imsi:
        type: string
      time:
        type: integer
        format: int64
      event:
        type: string
      imei:
        type: string
      ueIpAddress:
        type: string
      apn:
        type: string
      dns0:
        type: string
      dns1:
        type: string
      vpgId:
        type: string
      gatewayPrivateIpAddress:
        type: string
      gatewayPublicIpAddress:
        type: string

  Map:
    type: object
    additionalProperties:
      type: string

  Tag:
    type: object
    additionalProperties:
      type: string
    example:
      location: tokyo

  TagUpdateRequest:
    type: object
    properties:
      tagName:
        type: string
      tagValue:
        type: string
    required:
      - tagName
      - tagValue

  GroupConfigurationUpdateRequest:
    properties:
      key:
        type: string
      value:
        type: string
    required:
      - key
      - value

  Group:
    properties:
      configuration:
       '$ref': '#/definitions/Map'
      createdTime:
        type: integer
        format: int64
      groupId:
        type: string
      lastModifiedTime:
        type: integer
        format: int64
      operatorId:
        type: string
      tags:
       '$ref': '#/definitions/Tag'

  SetGroupRequest:
    properties:
      groupId:
        type: string
      tags:
        '$ref': '#/definitions/Tag'

  ImeiLock:
    properties:
      imei:
        type: string

  SetImeiLockRequest:
    properties:
      imei:
        type: string

  CreateGroupRequest:
    properties:
      tags:
       '$ref': '#/definitions/Tag'

  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string

#Common API
  APICallError:
    properties:
      errorMessage: {'$ref': '#/definitions/APICallErrorMessage'}
      httpStatus: {type: integer, format: int32}

  APICallErrorMessage:
    required: [code, message]
    properties:
      code: {type: string, description: エラーコード}
      message: {type: string, description: 'エラーメッセージ。リクエスト時にX-Soracom-Langヘッダーに言語(en,ja)を設定するとその言語のメッセージがセットされます。'}

#Auth API
  VerifyOperatorsRequest:
    properties:
      token:
        type: string
    required:
      - token

  AuthRequest:
    properties:
      authKey: {type: string}
      authKeyId: {type: string}
      email: {type: string}
      operatorId: {type: string}
      password: {type: string}
      tokenTimeoutSeconds: {type: integer, format: int64, default: 86400, maximum: 172800}
      userName: {type: string}

  AuthResponse:
    properties:
      apiKey: {type: string}
      operatorId: {type: string}
      token: {type: string}
      userName: {type: string}

  APIKeyResponse:
    properties:
      apiKey:
        type: string

  ListSubOperatorsResponse:
    properties:
      operatorId:
        type: string

#Operator API
  IssueEmailChangeTokenRequest:
    required: [email]
    properties:
      email: {type: string}

  VerifyEmailChangeTokenRequest:
    required: [token]
    properties:
      token: {type: string}

  AuthKeyResponse:
    properties:
      authKeyId: {type: string}
      createDateTime: {type: integer, format: int64}
      lastUsedDateTime: {type: integer, format: int64}

  GenerateOperatorsAuthKeyResponse:
    properties:
      authKey: {type: string}
      authKeyId: {type: string}

  GetOperatorResponse:
    properties:
      createDate:
        type: string
      description:
        type: string
      email:
        type: string
      operatorId:
        type: string
      rootOperatorId:
        type: string
      updateDate:
        type: string

  AuthResponse:
    properties:
      apiKey:
        type: string
      token:
        type: string
      operatorId:
        type: string

  IssuePasswordResetTokenRequest:
    properties:
      email:
        type: string
    required:
      - email

  VerifyPasswordResetTokenRequest:
    properties:
      password:
        type: string
      token:
        type: string
    required:
      - password
      - token

# Credential API
  CredentialsModel:
    properties:
      createDateTime: {type: integer, format: int64}
      credentials: {type: object}
      credentialsId: {type: string}
      description: {type: string}
      lastUsedDateTime: {type: integer, format: int64}
      type:
        type: string
        enum: [aws-credentials, azure-credentials, psk, x509]
      updateDateTime: {type: integer, format: int64}

  CreateAndUpdateCredentialsModel:
    properties:
      credentials: {type: object}
      description: {type: string}
      type:
        type: string
        enum: [aws-credentials, azure-credentials, psk, x509]


# Operator API
  GenerateTokenRequest:
    properties:
      tokenTimeoutSeconds:
        type: integer
        maximum: 172800
        default: 86400
        description: |
          新しい API トークンの有効期限の長さ（秒単位）。
          指定しなければデフォルトは 86400 [秒]（24時間）。
          最大値は 172800 [秒]（48時間）。

  GenerateTokenResponse:
    properties:
      token:
        type: string
    required:
      - token

  UpdatePasswordRequest:
    required: [currentPassword, newPassword]
    properties:
      currentPassword: {type: string}
      newPassword: {type: string}

  SupportTokenResponse:
    properties:
      token:
        type: string
    required:
      - token

  RegisterOperatorsRequest:
    properties:
      email:
        type: string
      password:
        type: string
        description: パスワードは以下の条件を満たしている必要があります：長さ 8 文字以上100 文字以内、アルファベット小文字 (a-z) を 1 文字以上使用、アルファベット大文字 (A-Z) を 1 文字以上使用、数字を 1 文字以上使用。記号なども使用できます。
    required:
      - email
      - password

  VerifyOperatorsRequest:
    properties:
      token:
        type: string
    required:
      - token

  GetOperatorResponse:
    properties:
      createDate:
        type: string
      description:
        type: string
      email:
        type: string
      operatorId:
        type: string
      rootOperatorId:
        type: string
      updateDate:
        type: string
    required:
      - createDate
      - description
      - email
      - operatorId
      - rootOperatorId
      - updateDate

# Role API
  ListRolesResponse:
    properties:
      createDateTime: {type: integer, format: int64}
      description: {type: string}
      roleId: {type: string}
      updateDateTime: {type: integer, format: int64}

  RoleResponse:
    properties:
      createDateTime: {type: integer, format: int64}
      description: {type: string}
      permission: {type: string, description: PermissionのJSON}
      roleId: {type: string}
      updateDateTime: {type: integer, format: int64}

  CreateOrUpdateRoleRequest:
    required: [permission]
    properties:
      description: {type: string}
      permission: {type: string, description: PermissionのJSON}

  CreateRoleResponse:
    properties:
      roleId: {type: string}

  UserDetailResponse:
    properties:
      authKeyList:
        type: array
        items: {'$ref': '#/definitions/AuthKeyResponse'}
      createDateTime: {type: integer, format: int64}
      description: {type: string}
      hasPassword: {type: boolean}
      permission: {type: string}
      roleList:
        type: array
        items: {'$ref': '#/definitions/ListRolesResponse'}
      updateDateTime: {type: integer, format: int64}
      userName: {type: string}

  AttachRoleRequest:
    properties:
      roleId: {type: string}

#Shipping Address API
  ListShippingAddressResponse:
    properties:
      shippingAddresses:
        type: array
        items: {'$ref': '#/definitions/GetShippingAddressResponse'}

  ShippingAddressModel:
    required: [city, state, zipCode]
    properties:
      addressLine1: {type: string}
      addressLine2: {type: string}
      building: {type: string}
      city: {type: string}
      companyName: {type: string}
      department: {type: string}
      fullName: {type: string}
      phoneNumber: {type: string}
      state: {type: string}
      zipCode: {type: string}

  GetShippingAddressResponse:
    required: [city, shippingAddressId, shippingArea, state, zipCode]
    properties:
      addressLine1: {type: string}
      addressLine2: {type: string}
      building: {type: string}
      city: {type: string}
      companyName: {type: string}
      department: {type: string}
      fullName: {type: string}
      phoneNumber: {type: string}
      shippingAddressId: {type: string, description: 配送先ID}
      shippingArea: {type: string, description: 配送先エリア}
      state: {type: string}
      zipCode: {type: string}

#Users API
  UserDetailResponse:
    properties:
      authKeyList:
        type: array
        items: {'$ref': '#/definitions/AuthKeyResponse'}
      createDateTime: {type: integer, format: int64}
      description: {type: string}
      hasPassword: {type: boolean}
      permission: {type: string}
      roleList:
        type: array
        items: {'$ref': '#/definitions/ListRolesResponse'}
      updateDateTime: {type: integer, format: int64}
      userName: {type: string}

  CreateUserRequest:
    properties:
      description: {type: string}

  UpdateUserRequest:
    properties:
      description: {type: string}

  GenerateUserAuthKeyResponse:
    properties:
      authKey: {type: string}
      authKeyId: {type: string}

  GetUserPasswordResponse:
    properties:
      hasPassword: {type: boolean}

  CreateUserPasswordRequest:
    properties:
      password: {type: string}

  GetUserPermissionResponse:
    required: [permission]
    properties:
      permission: {type: string, description: PermissionのJSON}

  SetUserPermissionRequest:
    required: [permission]
    properties:
      description: {type: string}
      permission: {type: string, description: PermissionのJSON}


#Subscribers API
  RegisterSubscribersRequest:
    properties:
      registrationSecret:
        type: string
      groupId:
        type: string
      tags:
        type: array
        items:
         '$ref': '#/definitions/TagUpdateRequest'
    required:
      - registrationSecret

  UpdateSpeedClassRequest:
    properties:
      speedClass:
        type: string
        enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
    required:
      - speedClass

#Billing API
  GetBillingHistoryResponse:
    properties:
      billList:
        type: array
        description: 月ごとの利用料リスト
        items: {'$ref': '#/definitions/MonthlyBill'}
  MonthlyBill:
    properties:
      amount: {type: integer, format: int64, description: 金額}
      paymentStatus:
        type: string
        description: 直近の課金ステータス
        enum: [lessThanMinimumCharge, paying, paid, refunding, refunded, fail]
      paymentTransactionId: {type: string, description: 課金詳細取得用のID}
      yearMonth: {type: string, example: yyyyMM, description: 年月}
  GetLatestBill:
    properties:
      amount: {type: integer, format: int64, description: 金額}
      lastEvaluatedTime: {type: string, example: yyyyMMddHHmmss, description: 利用額計算を実施した時間}
  DailyBillResponse:
    properties:
      billList:
        type: array
        description: 日ごとの利用料リスト
        items: {'$ref': '#/definitions/DailyBill'}
  DailyBill:
    properties:
      amount: {type: integer, format: int64, description: 金額}
      date: {type: string, example: yyyyMMdd, description: 年月日}

#Payment API
  CouponResponse:
    properties:
      amount: {type: number, format: double, description: クーポン額}
      balance: {type: number, format: double, description: 残高}
      billItemName: {type: string, description: 対象課金アイテム}
      couponCode: {type: string, description: クーポンコード}
      expiryYearMonth: {type: string, example: yyyyMM, description: 有効期限}

  ListCouponResponse:
    properties:
      couponList:
        type: array
        description: クーポンリスト
        items: {'$ref': '#/definitions/CouponResponse'}

  PaymentAmount:
    properties:
      taxAmount: {type: number, format: double}
      totalAmount: {type: number, format: double}

  GetPaymentTransactionResult:
    properties:
      amount: {description: 課金額,'$ref': '#/definitions/PaymentAmount'}
      description: {description: 課金内容詳細,'$ref': '#/definitions/PaymentDescription'}
      message: {type: string, description: メッセージ}
      messageCode:
        type: string
        description: メッセージコード
        enum: [success, processing, invalid_request, invalid_number, incorrect_number,
          invalid_name, invalid_expiry_month, invalid_expiry_year, invalid_expiry,
          incorrect_expiry, invalid_cvc, incorrect_cvc, card_declined, missing, processing_error]
      status:
        type: string
        description: ステータス
        enum: [success, error]

  PaymentDescription:
    properties:
      description: {type: string}
      itemList:
        type: array
        items: {type: string}

  GetPaymentMethodResult:
    properties:
      errorCode:
        type: string
        description: エラーコード（支払い情報が無効な場合のみ）
        enum: [success, processing, invalid_request, invalid_number, incorrect_number,
          invalid_name, invalid_expiry_month, invalid_expiry_year, invalid_expiry,
          incorrect_expiry, invalid_cvc, incorrect_cvc, card_declined, missing, processing_error]
      errorMessage: {type: string, description: エラーメッセージ（支払い情報が無効な場合のみ}
      properties: {type: string, description: 支払い情報}
      providerType:
        type: string
        description: 課金プロバイダ種別
        enum: [WebPay]
      updateDate: {type: string, example: yyyyMMddHHmmss, description: 登録日}

  CreditCard:
    properties:
      cvc: {type: string}
      expireMonth: {type: integer, format: int32}
      expireYear: {type: integer, format: int32}
      name: {type: string}
      number: {type: string}

  PaymentStatementResponse:
    properties:
      amount: {type: number, format: double, description: 金額}
      paymentDateTime: {type: integer, format: int64, description: 課金日時}
      paymentInstrument: {type: string, description: 支払情報}
      paymentMethod: {type: string, description: 支払方法}
      paymentStatementId: {type: string, description: 課金明細ID}
      paymentStatementInfo: {type: string, description: 支払内容}

  ListPaymentStatementResponse:
    properties:
      paymentStatementsList:
        type: array
        description: 課金明細リスト
        items: {'$ref': '#/definitions/PaymentStatementResponse'}

  RegisterPayerInformationModel:
    properties:
      companyName:
        type: string
        description: 企業名
      department:
        type: string
        description: 部署
      fullName:
        type: string
        description: 氏名

#Order API
  ListOrderResponse:
    properties:
      orderList:
        type: array
        description: 発注リスト
        items: {'$ref': '#/definitions/GetOrderResponse'}

  OrderItemModel:
    properties:
      productCode: {type: string, description: 商品コード}
      quantity: {type: integer, format: int32, description: 購入数}

  CreateEstimatedOrderRequest:
    properties:
      orderItemList:
        type: array
        description: 発注商品リスト
        items: {'$ref': '#/definitions/OrderItemModel'}
      shippingAddressId: {type: string, description: 商品発送先ID}

  EstimatedOrderModel:
    properties:
      email: {type: string, description: メールアドレス}
      orderId: {type: string, description: 発注ID}
      orderItemList:
        type: array
        description: 発注商品リスト
        items: {'$ref': '#/definitions/EstimatedOrderItemModel'}
      shippingAddress: {description: 発送先,'$ref': '#/definitions/ShippingAddressModel'}
      shippingAddressId: {type: string, description: 商品発送先ID}
      shippingCost: {type: number, format: double, description: 配送料}
      taxAmount: {type: number, format: double, description: 消費税}
      totalAmount: {type: number, format: double, description: 合計金額}

  GetOrderResponse:
    properties:
      email: {type: string, description: メールアドレス}
      orderDateTime: {type: string, example: yyyyMMddHHmmss, description: 発注日時}
      orderId: {type: string, description: 発注ID}
      orderItemList:
        type: array
        description: 発注商品リスト
        items: {'$ref': '#/definitions/EstimatedOrderItemModel'}
      orderStatus:
        type: string
        description: 発注ステータス
        enum: [ordering, ordered, kitting, shipped, received, cancelling, cancelled,
          failed]
      shippingAddress: {description: 発送先,'$ref': '#/definitions/ShippingAddressModel'}
      shippingAddressId: {type: string, description: 商品発送先ID}
      shippingCost: {type: number, format: double, description: 配送料}
      shippingLabelNumber: {type: string, description: 宅配便送り状番号}
      taxAmount: {type: number, format: double, description: 消費税}
      totalAmount: {type: number, format: double, description: 合計金額}

  EstimatedOrderItemModel:
    properties:
      product: {description: 商品,'$ref': '#/definitions/ProductModel'}
      productAmount: {type: number, format: double, description: 商品金額}
      quantity: {type: integer, format: int32, description: 購入数}

  ListOrderedSubscriberResponse:
    properties:
      orderedSubscriberList:
        type: array
        description: 発注したSIMのリスト
        items: {$ref: '#/definitions/OrderedSubscriber'}

  OrderedSubscriber:
    properties:
      imsi: {type: string, description: IMSI}
      msisdn: {type: string, description: MSISDN}
      serialNumber: {type: string, description: serialNumber}

  ListProductResponse:
    properties:
      productList:
        type: array
        items: {'$ref': '#/definitions/ProductModel'}
      shippingCostList:
        type: array
        items: {'$ref': '#/definitions/ShippingCostModel'}

  ShippingCostModel:
    properties:
      shippingArea:
        type: string
        description: 発送先エリア
        enum: [hokkaido, kita_tohoku, minami_tohoku, kanto, shinetsu, chubu, hokuriku,
          kansai, chugoku, shikoku, kyushu, okinawa]
      shippingAreaName: {type: string, description: 発送先エリア名称}
      shippingCost: {type: number, format: double, description: 送料}
      size: {type: integer, format: int32, description: 発送サイズ}
    description: 発送料

  ProductModel:
    properties:
      count: {type: number, format: double, description: 商品販売個数}
      maxQuantity: {type: integer, format: int32, description: 最大購入数量}
      price: {type: number, format: double, description: 商品販売個数ごとの価格}
      productCode: {type: string, description: 商品コード}
      productInfoURL: {type: string, description: 商品説明ページURL}
      productName: {type: string, description: 商品名}
      productType:
        type: string
        description: 商品種別
        enum: [sim, network_module]
      properties:
        type: object
        description: 商品プロパティ
        additionalProperties: {type: string}

#Stats API
  DataTrafficStats:
    properties:
      downloadByteSizeTotal:
        type: integer
        format: int64
      downloadPacketSizeTotal:
        type: integer
        format: int64
      uploadByteSizeTotal:
        type: integer
        format: int64
      uploadPacketSizeTotal:
        type: integer
        format: int64

  SoracomBeamStats:
    properties:
      count:
        type: integer
        format: int64

  Map«string,string»:
    type: object
    additionalProperties:
      type: string

  AirStatsResponse:
    properties:
      dataTrafficStatsMap:
        type: object
        additionalProperties:
         '$ref': '#/definitions/DataTrafficStats'
      date:
        type: string
      unixtime:
        type: integer
        format: int64

  BeamStatsResponse:
    properties:
      beamStatsMap:
        type: object
        additionalProperties:
         '$ref': '#/definitions/SoracomBeamStats'
      date:
        type: string
      unixtime:
        type: integer
        format: int64

  ExportRequest:
    properties:
      from:
        type: integer
        format: int64
      period:
        type: string
        enum: [month, day, minutes]
      to:
        type: integer
        format: int64

  GetExportedFileResponse:
    properties:
      status:
        type: string
        description: ファイル出力ステータス
        enum:
          - processing
          - exported
          - failed
      url:
        type: string
        description: ファイルダウンロードURL

  Config:
    properties:
      properties:
        type: object
        additionalProperties:
          type: string
      type:
        type: string

  ActionConfig:
    properties:
      properties:
       '$ref': '#/definitions/ActionConfigProperty'
      type:
        type: string
        enum:
          - ChangeSpeedClassAction
          - InvokeAWSLambdaAction
          - ExecuteWebRequestAction
          - SendMailAction
          - SendMailToOperatorAction
    required:
      - properties
      - type

  ActionConfigProperty:
    properties:
      executionDateTimeConst:
        type: string
        enum:
          - IMMEDIATELY
          - BEGINNING_OF_NEXT_MONTH
          - BEGINNING_OF_NEXT_DAY
          - AFTER_ONE_DAY
          - NEVER
      to:
        type: string
        description: SendMailAction の時のみ有効
      title:
        type: string
        description: SendMailAction, SendMailToOperatorAction の時のみ有効
      message:
        type: string
        description: SendMailAction, SendMailToOperatorAction の時のみ有効
      speedClass:
        type: string
        description: ChangeSpeedClassAction の時のみ有効
        enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
      url:
        type: string
        description: 接続先URLとパラメーター ExecuteWebRequestAction の時のみ有効
      httpMethod:
        type: string
        description: ExecuteWebRequestAction の時のみ有効
        enum:
          - GET
          - POST
          - PUT
          - DELETE
      contentType:
        type: string
        description: ExecuteWebRequestAction の時のみ有効
      headers:
        type: object
        description: ExecuteWebRequestAction の時のみ有効(任意)
      body:
        type: string
        description: ExecuteWebRequestAction の時のみ有効(任意)
      endpoint:
        type: string
        description: InvokeAWSLambdaAction の時のみ有効
      functionName:
        type: string
        description: InvokeAWSLambdaAction の時のみ有効
      accessKey:
        type: string
        description: InvokeAWSLambdaAction の時のみ有効
      secretAccessKey:
        type: string
        description: InvokeAWSLambdaAction の時のみ有効
      parameter1:
        type: string
        description: InvokeAWSLambdaAction の時のみ有効
      parameter2:
        type: string
        description: InvokeAWSLambdaAction の時のみ有効
      parameter3:
        type: string
        description: InvokeAWSLambdaAction の時のみ有効
      parameter4:
        type: string
        description: InvokeAWSLambdaAction の時のみ有効
      parameter5:
        type: string
        description: InvokeAWSLambdaAction の時のみ有効
    required:
      - executionDateTimeConst

  RuleConfig:
    properties:
      properties:
       '$ref': '#/definitions/RuleConfigProperty'
      type:
        type: string
        enum:
          - DailyTrafficRule
          - MonthlyTrafficRule
          - CumulativeTrafficRule
          - MonthlyTotalTrafficRule
          - SubscriberStatusAttributeRule
          - SubscriberSpeedClassAttributeRule
    required:
      - properties
      - type

  RuleConfigProperty:
    properties:
      limitTotalTrafficMegaByte:
        type: integer
      inactiveTimeoutDateConst:
        type: string
        enum:
          - IMMEDIATELY
          - BEGINNING_OF_NEXT_MONTH
          - BEGINNING_OF_NEXT_DAY
          - AFTER_ONE_DAY
          - NEVER
      targetStatus:
        type: string
        description: SubscriberStatusAttributeRule の時のみ有効
        enum:
          - ready
          - active
          - inactive
          - suspended
          - terminated
      targetSpeedClass:
        type: string
        description: SubscriberSpeedClassAttributeRule の時のみ有効
        enum:
          - s1.minimum
          - s1.slow
          - s1.standard
          - s1.fast
    required:
      - limitTotalTrafficMegaByte

  Map«string,DataTrafficStats»:
    type: object
    additionalProperties:
     '$ref': '#/definitions/DataTrafficStats'

  CreateEventHandlerRequest:
    properties:
      actionConfigList:
        type: array
        items:
         '$ref': '#/definitions/ActionConfig'
      description:
        type: string
      name:
        type: string
      ruleConfig:
       '$ref': '#/definitions/RuleConfig'
      status:
        type: string
        enum: [inactive, active]
      targetGroupId:
        type: string
      targetImsi:
        type: string
      targetOperatorId:
        type: string
      targetTag:
       '$ref': '#/definitions/Tag'
    required:
      - actionConfigList
      - ruleConfig
      - status

  UpdateEventHandlerRequest:
   '$ref': '#/definitions/CreateEventHandlerRequest'

  EventHandlerModel:
    properties:
      actionConfigList:
        type: array
        items:
         '$ref': '#/definitions/ActionConfig'
      description:
        type: string
      handlerId:
        type: string
      name:
        type: string
      ruleConfig:
       '$ref': '#/definitions/RuleConfig'
      status:
        type: string
        enum: [inactive, active]
      targetGroupId:
        type: string
      targetImsi:
        type: string
      targetOperatorId:
        type: string
      targetTag:
       '$ref': '#/definitions/Tag'
    required:
      - actionConfigList
      - handlerId
      - ruleConfig
      - status
      - name

  IssueSubscriberTransferTokenRequest:
    required:
      - transferDestinationOperatorEmail
      - transferDestinationOperatorId
      - transferImsi
    properties:
      transferDestinationOperatorEmail:
        type: string
        description: 移管先オペレーターEmail
      transferDestinationOperatorId:
        type: string
        description: 移管先オペレーターID
      transferImsi:
        type: array
        description: 移管するIMSIリスト
        items:
          type: string

  IssueSubscriberTransferTokenResponse:
    required:
      - token
    properties:
      token:
        type: string
        description: トークン

  VerifySubscriberTransferTokenRequest:
    required:
      - token
    properties:
      token:
        type: string
        description: トークン

  VerifySubscriberTransferTokenResponse:
    required:
      - transferredImsi
    properties:
      transferredImsi:
        type: array
        description: 移管されたIMSIリスト
        items:
          type: string

  FileExportResponse:
    properties:
      exportedFileId:
        type: string
        description: ファイル出力ID(リクエストにexport_mode=asyncを指定した場合）
      exportedFilePath:
        type: string
        description: 出力済みファイル取得パス(リクエストにexport_mode=asyncを付与した場合）
      url:
        type: string
        description: ファイルダウンロードURL(export_mode指定なし、もしくはexport_mode=syncの場合

# VirtualPrivateGateways API
  VirtualPrivateGateway:
    properties:
      operatorId:
        type: string
      id:
        type: string
      primaryServiceName:
        type: string
        enum: [Canal,Direct,Door,Gate]
      type:
        type: integer
        enum: [0xc, 0xd]
      status:
        type: string
      useInternetGateway:
        type: boolean
      vpcPeeringConnections:
        $ref: '#/definitions/Map'
      virtualInterfaces:
        $ref: '#/definitions/Map'
      createdTime:
        type: integer
        format: int64
      lastModifiedTime:
        type: integer
        format: int64
      tags:
        $ref: '#/definitions/Tag'

  CreateVirtualPrivateGatewayRequest:
    required:
      - primaryServiceName
    properties:
      primaryServiceName:
        type: string
        enum: [Canal,Gate]
        default: Canal
      useInternetGateway:
        type: boolean
      deviceSubnetCidrRange:
        type: string
        default: 10.128.0.0/9

  RegisterGatePeerRequest:
    required:
      - outerIpAddress
    properties:
      outerIpAddress:
        type: string
      innerIpAddress:
        type: string

  GatePeer:
    properties:
      outerIpAddress:
        type: string
      innerIpAddress:
        type: string
      ownedByCustomer:
        type: boolean

  IpAddressMapEntry:
    properties:
      key:
        type: string
      ipAddress:
        type: string
      type:
        type: string
        enum: [static, dynamic, customerGatePeer, gatePeer]

  PutIpAddressMapEntryRequest:
    required:
      - key
      - ipAddress
    properties:
      key:
        type: string
      ipAddress:
        type: string

  VpcPeeringConnection:
    properties:
      id:
        type: string
      peerOwnerId:
        type: string
      peerVpcId:
        type: string
      destinationCidrBlock:
        type: string

  CreateVpcPeeringConnectionRequest:
    properties:
      peerOwnerId:
        type: string
      peerVpcId:
        type: string
      destinationCidrBlock:
        type: string

# Logs
  LogEntry:
    properties:
      service:
        type: string
        enum: ['Air','Beam','Canal','Direct','Door','Endorse','Funnel','Gate']
      resourceType:
        type: string
        enum: ['Subscriber','EventHandler','VirtualPrivateGateway']
      resourceId:
        type: string
      time:
        type: integer
        format: int64
      body:
        type: object

# Data
  DataEntry:
    properties:
      time:
        type: integer
        format: int64
      content:
        type: string
      contentType:
        type: string

# LoraData
  LoraData:
    properties:
      data:
        type: string

# LoraDevice
  LoraDevice:
    type: object
    properties:
      deviceId:
        type: string
      operatorId:
        type: string
      groupId:
        type: string
      lastModifiedTime:
        type: string
        format: date-time
      terminationEnabled:
        type: boolean
        default: false
      status:
        type: string
        enum:
        - active
        - ready
        - terminated
        - instock
      tags:
        type: object
        additionalProperties:
          type: string

  LoraGateway:
    type: object
    properties:
      operatorId:
        type: string
      gatewayId:
        type: string
      status:
        type: string
        enum:
        - active
        - terminated
        - ready
        - instock
      tags:
        type: object
        additionalProperties:
          type: string
      createdTime:
        type: string
        format: date-time
      lastModifiedTime:
        type: string
        format: date-time
      networkSetId:
        type: string
      terminationEnabled:
        type: boolean
        default: false
      owned:
        type: boolean
        default: false
      address:
        type: string
      online:
        type: boolean
        default: false

  LoraNetworkSet:
    type: object
    properties:
      operatorId:
        type: string
      networkSetId:
        type: string
      allowedOperators:
        type: array
        uniqueItems: true
        items:
          type: string
      tags:
        type: object
        additionalProperties:
          type: string
      createdTime:
        type: string
        format: date-time
      lastModifiedTime:
        type: string
        format: date-time

  SetNetworkSetRequest:
    type: object
    properties:
      networkSetId:
        type: string

  UpdatePermissionRequest:
    type: object
    properties:
      operatorId:
        type: string
